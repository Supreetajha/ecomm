{"version":3,"sources":["Constants/cartConstants.js","Constants/orderConstants.js","Constants/userConstants.js","Actions/userActions.js","Components/SearchBox.js","Components/Header.js","Components/Footer.js","Components/Rating.js","Components/Product.js","Components/Loader.js","Components/Message.js","Components/Advertisement.js","Constants/productConstants.js","Actions/productActions.js","Screens/Homescreen.js","Screens/Productscreen.js","Actions/cartActions.js","Screens/Cartscreen.js","Components/FormContainer.js","Screens/Loginscreen.js","Screens/Registerscreen.js","Screens/Profilescreen.js","Actions/orderActions.js","Components/CheckoutSteps.js","Screens/Shippingscreen.js","Screens/Paymentscreen.js","Screens/PlaceOrderscreen.js","Screens/Orderscreen.js","Screens/UserListscreen.js","Screens/UserEditscreen.js","Screens/ProductListscreen.js","Screens/ProductEditscreen.js","Screens/OrderListscreen.js","App.js","reportWebVitals.js","store.js","Reducers/productReducers.js","Reducers/cartReducers.js","Reducers/userReducers.js","Reducers/orderReducers.js","index.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_CLEAR_ITEMS","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","getUserDetails","id","dispatch","getState","a","userLogin","userInfo","config","headers","Authorization","token","type","axios","get","data","payload","response","detail","message","SearchBox","history","useHistory","useState","keyword","setKeyword","handleSubmit","e","preventDefault","push","location","pathname","Form","onSubmit","className","Control","placeholder","name","value","onChange","target","Button","variant","onClick","Header","useSelector","state","useDispatch","Navbar","bg","expand","Container","to","exact","Brand","href","Toggle","Collapse","Nav","Link","DropdownButton","title","Dropdown","Item","localStorage","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","Message","children","Alert","Advertisement","Carousel","Image","alt","fluid","Caption","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","listProductDetails","Homescreen","productList","products","error","loading","search","useEffect","map","xs","sm","lg","xl","Productscreen","match","qty","setQty","productDetails","params","md","ListGroup","description","countInStock","Array","keys","x","disabled","addToCart","item","console","log","setItem","JSON","stringify","cart","cartItems","Cartscreen","queryParams","URLSearchParams","window","parseInt","totalItems","reduce","acc","totalAmount","toFixed","handleRemoveFromCart","removeFromCart","length","thumbnail","htmlFor","Number","FormContainer","Loginscreen","email","setEmail","password","setPassword","redirect","handleLogin","post","login","Group","controlId","Label","Registerscreen","setName","confirmPassword","setConfirmPassword","userRegister","handleRegister","register","required","Profilescreen","userDetails","user","success","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","handleUpdate","put","updateUserProfile","Table","striped","responsive","order","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","Boolean","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","saveShippingAddress","Paymentscreen","paymentMethod","setPaymentMethod","submitHandler","savePaymentMethod","Check","label","PlaceOrderscreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","rounded","createOrder","orderItems","Orderscreen","orderDetails","orderId","Id","UserListscreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","size","UserEditscreen","userId","setAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","handleEdit","updateUser","checked","ProductListscreen","productDelete","productCreate","successCreate","newProduct","deleteProduct","category","brand","ProductEditscreen","productId","setPrice","setBrand","setCategory","setImage","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadImage","file","files","formData","FormData","append","custom","OrderListscreen","orderList","isDelivered","deliveredAt","App","path","component","Shippingscreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","productTop","newItem","check","find","concat","filter","errors","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b68191f7.chunk.js","sourcesContent":["export const  CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const  CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const  CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../Constants/cartConstants'\r\nimport {ORDER_LIST_MY_RESET} from '../Constants/orderConstants'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../Constants/userConstants'\r\n\r\n\r\nexport const login = (email,password) => async(dispatch) => {\r\n    try{\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json'}\r\n        }\r\n        dispatch({type:USER_LOGIN_REQUEST})\r\n\r\n        const {data} = await axios.post('/api/users/login/',\r\n                        {'username':email,'password':password},\r\n                        config)\r\n        dispatch({type: USER_LOGIN_SUCCESS, payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }catch(error) {\r\n        dispatch({type: USER_LOGIN_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const logout = () =>(dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: CART_CLEAR_ITEMS})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n}\r\n\r\nexport const register = (name,email,password) => async(dispatch) => {\r\n    try{\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json'}\r\n        }\r\n        dispatch({type:USER_REGISTER_REQUEST})\r\n\r\n        const {data} = await axios.post('/api/users/register/',\r\n                        {'name':name,'email':email,'password':password},\r\n                        config)\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload:data})\r\n        dispatch({type: USER_LOGIN_SUCCESS, payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }catch(error) {\r\n        dispatch({type: USER_REGISTER_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/users/${id}/`,\r\n                        config)\r\n\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_DETAILS_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n        }\r\n\r\n        dispatch({type:USER_UPDATE_PROFILE_REQUEST})\r\n\r\n        const {data} = await axios.put(`/api/users/profile/update/`,user,\r\n                        config)\r\n\r\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload:data})\r\n        dispatch({type: USER_LOGIN_SUCCESS,payload:data})\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n  \r\n        }catch(error) {\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const getUserList = () => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/users/`,\r\n                        config)\r\n\r\n        dispatch({type: USER_LIST_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_LIST_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_DELETE_REQUEST})\r\n\r\n        const {data} = await axios.delete(`/api/users/delete/${id}/`,\r\n                        config)\r\n\r\n        dispatch({type: USER_DELETE_SUCCESS})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_DELETE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_UPDATE_REQUEST})\r\n\r\n        const {data} = await axios.put(`/api/users/update/${user._id}/`,\r\n                        user,\r\n                        config)\r\n\r\n        dispatch({type: USER_UPDATE_SUCCESS})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_UPDATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}","import {Button,Form,FormControl} from 'react-bootstrap'\r\nimport {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    let history= useHistory()\r\n    const [keyword,setKeyword] = useState('')\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}`)\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return(\r\n        <Form onSubmit={handleSubmit} className=\"d-flex\">\r\n            <Form.Control\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-5\"\r\n                name=\"q\"\r\n                aria-label=\"Search\"\r\n                value={keyword}\r\n                onChange = {(e)=> setKeyword(e.target.value)}\r\n            />\r\n            <Button variant=\"outline-success\" className=\"p-2\" onClick={handleSubmit}>Search</Button>\r\n    </Form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBox","import Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {logout} from '../Actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nfunction Header({ history }) {\r\n\r\nconst userLogin = useSelector(state=>state.userLogin)\r\nconst {userInfo} = userLogin\r\n\r\nconst dispatch = useDispatch()\r\nconst handleLogout = () => {\r\n    dispatch(logout())\r\n}\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                <LinkContainer to=\"/\" exact>\r\n                    <Navbar.Brand href=\"/\">Proshop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <SearchBox />\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    \r\n                <Nav className=\"me-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                        <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    {userInfo ?\r\n                    (<DropdownButton id=\"dropdown-basic-button\" title={userInfo.name}>\r\n                        <LinkContainer to=\"/profile\">\r\n                            <Dropdown.Item>\r\n                            Profile\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n\r\n                        <Dropdown.Item onClick = {handleLogout}>Logout</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    )\r\n                    :\r\n                    (<LinkContainer to=\"/login\">\r\n                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                    </LinkContainer>)\r\n                    }\r\n                    {userInfo && userInfo.isAdmin && \r\n                     (\r\n                        <DropdownButton id=\"dropdown-admin-button\" title=\"Admin\" className=\"ml-3\">\r\n                        <LinkContainer to=\"/admin/userlist\">\r\n                            <Dropdown.Item>\r\n                            Users\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n\r\n                        <LinkContainer to=\"/admin/productlist\">\r\n                            <Dropdown.Item>\r\n                            Products\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n\r\n                        <LinkContainer to=\"/admin/orderlist\">\r\n                            <Dropdown.Item>\r\n                            Orders\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                        </DropdownButton>\r\n                     )\r\n\r\n                    }\r\n\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Proshop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer","\r\nfunction Rating({value,text,color}) {\r\n    return(\r\n        <div className=\"Rating\">\r\n            <span>\r\n                <i style ={{color}} className={\r\n                        value>=1 ? 'fas fa-star'\r\n                                 : value >=0.5? 'fas fa-star-half-alt'\r\n                                 : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style ={{color}} className={\r\n                        value>=2 ? 'fas fa-star'\r\n                                 : value >=1.5? 'fas fa-star-half-alt'\r\n                                 : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style ={{color}} className={\r\n                        value>=3 ? 'fas fa-star'\r\n                                 : value >=2.5? 'fas fa-star-half-alt'\r\n                                 : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style ={{color}} className={\r\n                        value>=4 ? 'fas fa-star'\r\n                                 : value >=3.5? 'fas fa-star-half-alt'\r\n                                 : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style ={{color}} className={\r\n                        value===5 ? 'fas fa-star'\r\n                                 : value >=4.5? 'fas fa-star-half-alt'\r\n                                 : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import Card from 'react-bootstrap/Card'\r\nimport {Link} from 'react-router-dom';\r\n\r\n//My components\r\nimport Rating from './Rating'\r\n\r\n//&#8377; is the html for indian rupee\r\nfunction Product({product}) {\r\n    return(\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img className=\"my-3\" src={product.image} />\r\n            </Link>\r\n            \r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`} className =\"text-decoration-none\">\r\n                    <Card.Title as =\"div\">\r\n                       <strong>{product.name}</strong> \r\n                    </Card.Title>\r\n                </Link>\r\n                \r\n                <Card.Text as = \"div\">\r\n                    <div className = \"my-3\">\r\n                        <Rating value={product.rating} text = {`${product.numReviews} reviews`} color='#f8e825'/>\r\n                    </div>\r\n                \r\n                </Card.Text>\r\n                \r\n                <Card.Text as = \"h3\">\r\n                  &#8377;{product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\nexport default Product","import {Spinner} from 'react-bootstrap'\r\n\r\nfunction Loader(){\r\n\r\n    return(\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import {Alert} from 'react-bootstrap'\r\n\r\nfunction Message({variant,children}) {\r\n    return(\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import {useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nfunction Advertisement() {\r\n return(\r\n    <Carousel>\r\n        <Carousel.Item>\r\n        <Image\r\n            className=\"d-block w-100\"\r\n            src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\"\r\n            alt=\"First slide\"\r\n            fluid\r\n        />\r\n        <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n        <Image\r\n            className=\"d-block w-100\"\r\n            src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\"\r\n            alt=\"First slide\"\r\n            fluid\r\n        />\r\n        <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n        </Carousel.Item>\r\n    </Carousel>\r\n )\r\n}\r\n\r\nexport default Advertisement","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_RESET,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n\r\n} from '../Constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '') => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${keyword}`)\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload:data})\r\n\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, \r\n                 payload:error.response&&error.response.data.detail\r\n                         ?error.response.data.detail\r\n                         :error.message})\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}/`)\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data})\r\n\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, \r\n                payload:error.response&&error.response.data.detail\r\n                        ?error.response.data.detail\r\n                        :error.message})\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:PRODUCT_DELETE_REQUEST})\r\n\r\n        const {data} = await axios.delete(`/api/products/delete/${id}/`,\r\n                        config)\r\n\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: PRODUCT_DELETE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const createProduct = () => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:PRODUCT_CREATE_REQUEST})\r\n\r\n        const {data} = await axios.post(`/api/products/create/`,\r\n                        {},\r\n                        config)\r\n\r\n        dispatch({type: PRODUCT_CREATE_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: PRODUCT_CREATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:PRODUCT_UPDATE_REQUEST})\r\n\r\n        const {data} = await axios.put(`/api/products/update/${product._id}/`,\r\n                        product,\r\n                        config)\r\n\r\n        dispatch({type: PRODUCT_UPDATE_SUCCESS, payload:data})\r\n\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: PRODUCT_UPDATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n        const {data} = await axios.get(`/api/products/top/`)\r\n        dispatch({type: PRODUCT_TOP_SUCCESS, payload:data})\r\n\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_TOP_FAIL, \r\n                 payload:error.response&&error.response.data.detail\r\n                         ?error.response.data.detail\r\n                         :error.message})\r\n    }\r\n}","import Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport { useState,useEffect } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n//My components\r\nimport Product from '../Components/Product'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport Advertisement from '../Components/Advertisement'\r\n//actions\r\nimport {listProducts} from '../Actions/productActions'\r\n\r\nfunction Homescreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {products,error,loading} = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword))\r\n        \r\n    }, [dispatch,keyword])\r\n\r\n\r\n    return (\r\n   <div>\r\n       {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    : (<>\r\n                        <Advertisement />\r\n                       <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} xs={6} sm={4} lg={6} xl={4}>\r\n                            <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    \r\n                    </Row>\r\n                    </> )\r\n        }\r\n    </div>\r\n    \r\n    )\r\n\r\n}\r\n\r\nexport default Homescreen","import { Image,Row,Col,ListGroup,Card,Button,Form } from \"react-bootstrap\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { useEffect,useState } from \"react\";\r\n//My Components\r\nimport Rating from '../Components/Rating'\r\nimport {listProductDetails} from '../Actions/productActions'\r\nimport Message from '../Components/Message'\r\nimport Loader from \"../Components/Loader\";\r\n\r\n\r\nfunction Productscreen({match,history}) {\r\n \r\n const dispatch = useDispatch()\r\n const [qty,setQty] = useState(1)\r\n const productDetails = useSelector(state => state.productDetails);\r\n const {product,loading,error} = productDetails\r\n\r\n useEffect(()=>{\r\n    dispatch(listProductDetails(match.params.id))\r\n },[dispatch,match.params.id])\r\n\r\n const handleAddToCart = ()=> {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n }\r\n\r\n return(\r\n     <div>\r\n        {loading? <Loader />\r\n                : error? <Message variant=\"danger\">{error}</Message>    \r\n                : <>\r\n                    <Link to=\"/\" className = \"btn btn-light my-3\">Go Back</Link>\r\n                        <Row>\r\n                        <Col md={6}>\r\n                        <Image src={product.image} alt ={product.name} fluid/>\r\n                        </Col>\r\n                \r\n                        <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <strong>{product.name}</strong>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text = {`${product.numReviews} reviews`} color='#f8e825'/>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            &#8377;{product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                        <Col md={3}>\r\n                    <Card className=\"my-3 p-3\">\r\n                        <ListGroup variant = \"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Price</Col>\r\n                                    <Col>\r\n                                        &#8377;{product.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Status</Col>\r\n                                    <Col>\r\n                                        {product.countInStock? 'In stock': 'Out of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {product.countInStock\r\n                             ?(<ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col xs='auto' className='my-1'>\r\n                                        \r\n                                        <Form.Control \r\n                                            as=\"select\"    \r\n                                            value={qty}\r\n                                            onChange={(e) => setQty(e.target.value)}>\r\n                                                {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))}                                          \r\n                                        </Form.Control>\r\n                                       \r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>):null}\r\n\r\n                            <ListGroup.Item className=\"d-grid gap-2\">\r\n                                <Button className=\"my-3\" variant = \"dark\" onClick = {handleAddToCart}\r\n                                type=\"button\" disabled={!product.countInStock}>\r\n                                Add to Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        \r\n                    </Card>\r\n                </Col>\r\n                        </Row>\r\n                    </>\r\n\r\n    } \r\n        \r\n\r\n\r\n     </div>\r\n )\r\n}\r\n\r\nexport default Productscreen","import axios from 'axios'\r\n\r\n\r\n//constants\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_CLEAR_ITEMS,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../Constants/cartConstants'\r\n\r\nexport const addToCart = (id,qty) => async(dispatch,getState) => {\r\n    try{\r\n        const {data} = await axios.get(`/api/products/${id}/`)\r\n        const item  = {\r\n                         product : id,\r\n                         name: data.name,\r\n                         image: data.image,\r\n                         price: data.price,\r\n                         countInStock: data.countInStock,\r\n                         qty\r\n                        }\r\n        dispatch({type: CART_ADD_ITEM, payload:item})\r\n\r\n\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async(dispatch,getState) => {\r\n   \r\n        dispatch({type: CART_REMOVE_ITEM, payload:id})\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (shippingAddress) => async(dispatch) => {\r\n   \r\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload:shippingAddress})\r\nlocalStorage.setItem('shippingAddress', JSON.stringify(shippingAddress))\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async(dispatch) => {\r\n   \r\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload:paymentMethod})\r\nlocalStorage.setItem('paymentMethod', JSON.stringify(paymentMethod))\r\n}\r\n\r\n","import { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Row,Col,ListGroup,Image,Form,Button,Card} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Actions\r\nimport {addToCart,removeFromCart } from '../Actions/cartActions'\r\n\r\n//My components\r\nimport Message from '../Components/Message'\r\n\r\n\r\nfunction Cartscreen({match,location,history}) {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const qty = parseInt(queryParams.get('qty'));\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    let totalItems = cartItems.reduce((acc, item) => acc + item.qty, 0)\r\n    let totalAmount = cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\r\n    \r\n    useEffect(()=>{\r\n        if(match.params.id){\r\n            dispatch(addToCart(match.params.id,qty))\r\n        }\r\n        totalItems = cartItems.reduce((acc, item) => acc + item.qty, 0)\r\n        totalAmount = cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\r\n    },[dispatch,match.params.id,qty])\r\n\r\n    const handleRemoveFromCart = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const handleCheckout = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    \r\n    console.log(cartItems)\r\n  \r\n    return(\r\n        <Row>\r\n            <Col xs={12} md={8}>\r\n                <h2>Shopping Cart</h2>\r\n                {cartItems.length?\r\n                                    (<ListGroup variant=\"flush\">\r\n                                        {cartItems.map(item => (\r\n                                            <ListGroup.Item key={item.product}>\r\n                                                <Row className = \"align-items-start\">\r\n                                                    <Col xs={3} md={2} >\r\n                                                        <Link to = {`/product/${item.product}`}>\r\n                                                         <Image src={item.image} alt={item.name} fluid thumbnail/>\r\n                                                        </Link>\r\n                                                       \r\n                                                    </Col>\r\n                                                    <Col xs={3} md={3}>\r\n                                                        <Link className = \"text-decoration-none align-middle\" to = {`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col xs={3} md={2} className = \"py-1\">\r\n                                                       <span className=\"align-middle\">&#8377;{item.price}</span>\r\n                                                    </Col>\r\n                                                    <Col xs={2} md={2} className=\"py-1\">\r\n                                                        <label htmlFor=\"qty\">Qty</label> \r\n                                                        <select\r\n                                                            id=\"qty\"\r\n                                                            value={item.qty}\r\n                                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                                        >\r\n                                                            {\r\n\r\n                                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </select>\r\n                                                    </Col>\r\n                                                    <Col xs={1} md={1}>\r\n                                                        <Button\r\n                                                            type='button'\r\n                                                            variant='light'\r\n                                                            onClick={() => handleRemoveFromCart(item.product)}\r\n                                                        >\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                                \r\n\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                    )\r\n                                    : <Message variant=\"info\">Your cart is empty. <Link to=\"/\">Start shopping</Link></Message>\r\n                }\r\n            </Col>\r\n\r\n            <Col xs={8} md={4}>\r\n            <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>Total ({totalItems}) items</h3>\r\n                            <h4>Amount &#8377;{totalAmount}</h4>\r\n                        </ListGroup.Item>\r\n                   \r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={handleCheckout}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Cartscreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Link } from 'react-router-dom'\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {login} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nfunction Loginscreen({location,history}) {\r\n    const [email,setEmail] = useState()\r\n    const [password,setPassword] = useState()\r\n    const dispatch = useDispatch()\r\n    \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {loading,error,userInfo} = userLogin\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const redirect = queryParams.get('redirect')\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(`/${redirect}`)\r\n        }\r\n    },[userInfo,history,redirect])\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n    return(\r\n        <FormContainer>\r\n            {loading && <Loader />}\r\n            {error && <Message variant =\"danger\">{error}</Message>}\r\n            <Form onSubmit = {handleLogin}>\r\n                <h2>Sign-In</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}  />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" onClick= {handleLogin}>\r\n                    Submit\r\n                </Button>\r\n\r\n                <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to=\"/register\">\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n            </Form>\r\n            </FormContainer>\r\n        )\r\n}\r\n\r\nexport default Loginscreen","import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Link } from 'react-router-dom'\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {register} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\nfunction Registerscreen({location,history}) {\r\n    const [name,setName] = useState()\r\n    const [email,setEmail] = useState()\r\n    const [password,setPassword] = useState()\r\n    const [confirmPassword,setConfirmPassword] = useState()\r\n    const [message,setMessage] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading,error,userInfo} = userRegister\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(\"/\")\r\n        }\r\n    },[userInfo])\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        dispatch(register(name,email,password))\r\n    }\r\n    return(\r\n        <FormContainer>\r\n            {loading && <Loader />}\r\n            {error && <Message variant =\"danger\">{error}</Message>}\r\n            <Form onSubmit = {handleRegister}>\r\n                <h2>Sign-Up</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter your name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                    required />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                    required />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}  \r\n                    required/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm Password\"\r\n                    value = {confirmPassword}\r\n                    onChange = {(e) => setConfirmPassword(e.target.value)}  \r\n                    required/>\r\n                </Form.Group>\r\n                {confirmPassword && (password !== confirmPassword) &&\r\n                 <Message variant=\"danger\">Passwords do not match </Message>}\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                disabled = {confirmPassword && (password !== confirmPassword)}\r\n                onClick= {handleRegister}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Alredy have an account? <Link\r\n                        to=\"/login\">\r\n                        Sign-in\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n            </FormContainer>\r\n        )\r\n}\r\n\r\nexport default Registerscreen","\r\n    import {useState,useEffect} from 'react'\r\n    import {useDispatch,useSelector} from 'react-redux'\r\n    import Form from 'react-bootstrap/Form'\r\n    import Button from 'react-bootstrap/Button'\r\n    import Row from 'react-bootstrap/Row'\r\n    import Col from 'react-bootstrap/Col'\r\n    import Table from 'react-bootstrap/Table'\r\n    import { LinkContainer } from 'react-router-bootstrap'\r\n    import { Link } from 'react-router-dom'\r\n    //My components\r\n    \r\n    import {getUserDetails,updateUserProfile} from '../Actions/userActions'\r\n    import { listMyOrders } from '../Actions/orderActions'\r\n    \r\n    import Loader from '../Components/Loader'\r\n    import Message from '../Components/Message'\r\n    import { USER_UPDATE_PROFILE_RESET } from '../Constants/userConstants'\r\n\r\n    function Profilescreen({location,history}) {\r\n        \r\n        const userLogin = useSelector(state=>state.userLogin)\r\n        const {userInfo} = userLogin\r\n\r\n        const [name,setName] = useState()\r\n        const [email,setEmail] = useState()\r\n        const [password,setPassword] = useState()\r\n        const [confirmPassword,setConfirmPassword] = useState()\r\n     \r\n    \r\n        const dispatch = useDispatch()\r\n        \r\n        const userDetails = useSelector(state=>state.userDetails)\r\n        const {loading,error,user} = userDetails\r\n\r\n        const userUpdateProfile = useSelector(state=>state.userUpdateProfile)\r\n        const {success} = userUpdateProfile\r\n\r\n        const orderListMy = useSelector(state=>state.orderListMy)\r\n        const {loading:loadingOrders,error:errorOrders,orders} = orderListMy\r\n\r\n        useEffect(()=>{\r\n            if(!userInfo){\r\n                history.push(\"/login\")\r\n            }else {\r\n                if (!user || !user.name || success || userInfo.id !== user._id) {                \r\n                    dispatch(getUserDetails('profile'))\r\n                    dispatch(listMyOrders())\r\n                    dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                }\r\n                else{\r\n                    setEmail(user.email)\r\n                    setName(user.name)\r\n                }\r\n            }\r\n        },[dispatch,userInfo,history,user,success])\r\n    \r\n        const handleUpdate = (e) => {\r\n            e.preventDefault()\r\n            dispatch(updateUserProfile(\r\n                {'id':user._id,\r\n                'name':name,\r\n                'email':email,\r\n                'password':password}))\r\n        }\r\n        return(\r\n            <Row>\r\n                <Col sm={3}>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant =\"danger\">{error}</Message>}\r\n                    <Form onSubmit = {handleUpdate}>\r\n                        <h2>User Profile</h2>  \r\n                        <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                            <Form.Label>UserName</Form.Label>\r\n                            <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter your name\"\r\n                            value = {name}\r\n                            onChange = {(e) => setName(e.target.value)} \r\n                            required />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\"\r\n                            value = {email}\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                            required />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Please enter a valid email id \r\n                            </Form.Text>\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Password\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}  \r\n                            />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Confirm Password\"\r\n                            value = {confirmPassword}\r\n                            onChange = {(e) => setConfirmPassword(e.target.value)}  \r\n                            />\r\n                        </Form.Group>\r\n                        {confirmPassword && (password !== confirmPassword) &&\r\n                        <Message variant=\"danger\">Passwords do not match </Message>}\r\n        \r\n                        <Button variant=\"primary\" \r\n                        type=\"submit\" \r\n                        disabled = {confirmPassword && (password !== confirmPassword)}\r\n                        onClick= {handleUpdate}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <h2>My Orders</h2>\r\n                    {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>&#8377;{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n                </Col>\r\n                \r\n            </Row>\r\n                \r\n\r\n            )\r\n}\r\n\r\nexport default Profilescreen","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n} from '../Constants/orderConstants'\r\n\r\nimport {CART_CLEAR_ITEMS} from '../Constants/cartConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async(dispatch,getState)=>{\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:ORDER_CREATE_REQUEST})\r\n\r\n        const {data} = await axios.post(`/api/orders/add/`,\r\n                        order,\r\n                        config)\r\n\r\n        dispatch({type: ORDER_CREATE_SUCCESS, payload:data})\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n  \r\n    }catch(error) {\r\n        dispatch({type: ORDER_CREATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n\r\n}\r\n\r\nexport const getOrderDetails = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:ORDER_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}/`,\r\n                        config)\r\n\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload:data})\r\n \r\n  \r\n    }catch(error) {\r\n        dispatch({type: ORDER_DETAILS_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n\r\n}\r\n\r\nexport const listMyOrders = () => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:ORDER_LIST_MY_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders/`,\r\n                        config)\r\n\r\n        dispatch({type: ORDER_LIST_MY_SUCCESS, payload:data})\r\n \r\n  \r\n    }catch(error) {\r\n        dispatch({type: ORDER_LIST_MY_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const listOrders = () => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:ORDER_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/orders/`,\r\n                        config)\r\n\r\n        dispatch({type: ORDER_LIST_SUCCESS, payload:data})\r\n \r\n  \r\n    }catch(error) {\r\n        dispatch({type: ORDER_LIST_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n\r\n}","import Nav from 'react-bootstrap/Nav'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\n\r\nfunction CheckoutSteps({step1,step2,step3,step4}) {\r\n    return(\r\n        <Nav className='justify-content-center mb-4' variant=\"pills\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../Components/FormContainer'\r\n\r\nimport { saveShippingAddress } from '../Actions/cartActions'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(Boolean(shippingAddress)?shippingAddress.address:'')\r\n    const [city, setCity] = useState(Boolean(shippingAddress)?shippingAddress.city:'')\r\n    const [postalCode, setPostalCode] = useState(Boolean(shippingAddress)?shippingAddress.postalCode:'')\r\n    const [country, setCountry] = useState(Boolean(shippingAddress)?shippingAddress.country:'')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../Components/FormContainer'\r\n\r\nimport { savePaymentMethod } from '../Actions/cartActions'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nfunction Paymentscreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const [paymentMethod,setPaymentMethod] = useState('paypal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push(\"/shipping\")\r\n    }\r\n\r\n    function submitHandler(e){\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push(\"/placeorder\")\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <h3>Select Payment Method</h3>\r\n                    <Form.Check\r\n                        label=\"Paypal\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value = \"Paypal\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check\r\n                        label=\"Credit or Debit Card\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value = \"CCDC\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check\r\n                        label=\"Google Pay\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value = \"GooglePay\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check\r\n                        label=\"PayTM\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value =\"payTM\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Paymentscreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\nimport { createOrder } from '../Actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../Constants/orderConstants'\r\n\r\nfunction PlaceOrderscreen({ history }) {\r\n    \r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.18) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            console.log(order._id)\r\n            history.push(`/order/${order._id}`)\r\n            //dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n\r\n    const placeOrder = () => {\r\n\r\n       dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X &#8377;{item.price} = &#8377;{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>&#8377;{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>&#8377;{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>GST:</Col>\r\n                                    <Col>&#8377;{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>&#8377;{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderscreen","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\n\r\nimport { getOrderDetails} from '../Actions/orderActions'\r\n\r\n\r\nfunction Orderscreen({ match}) {\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order,loading, error } = orderDetails\r\n    const orderId = match.params.id\r\n    console.log(orderId)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        if (!order || order._id !== Number(orderId)) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [dispatch,order,orderId])\r\n\r\n\r\n\r\n    return loading? (<Loader />)\r\n            : error? (<Message variant=\"danger\">{error}</Message>)\r\n            :(<div>\r\n                <h1>Order: {order.Id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Payment pending</Message>\r\n                                        )}\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Your order is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X &#8377;{item.price} = &#8377;{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>&#8377;{(order.totalPrice-order.taxPrice-order.shippingPrice).toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>&#8377;{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>GST:</Col>\r\n                                    <Col>&#8377;{order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>&#8377;{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>)\r\n}\r\n\r\nexport default Orderscreen","import react ,{useEffect,useState} from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getUserList,deleteUser} from '../Actions/userActions'\r\n\r\n//My components\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\nfunction UserListscreen ({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading,error,users} = userList\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = {userDelete}\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin)  {\r\n           dispatch(getUserList()) \r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,userInfo,history,successDelete])\r\n\r\n    function deleteHandler(id,name){\r\n        if(window.confirm(`Delete user ${name}?`)){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return loading? (<Loader/>)\r\n                  : error? (<Message variant=\"danger\">{error}</Message>)\r\n                        : (\r\n                            <Table striped bordered hover responsive size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th>EDIT/DELETE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id,user.name)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n    }\r\n        \r\n\r\n\r\nexport default UserListscreen","import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {getUserDetails,updateUser} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { USER_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\nfunction UserEditscreen({match,history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [isAdmin,setAdmin] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {loading,error,user} = userDetails\r\n\r\n    const userUpdate = useSelector(state=>state.userUpdate)\r\n    const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\r\n\r\n    useEffect(()=>{\r\n        if (successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }\r\n        if(!user._id || user._id!== Number(userId)){\r\n            dispatch(getUserDetails(userId))\r\n        } else{\r\n            if(user.name !== name) {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    },[dispatch,userId,user,successUpdate,history])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id,name,email,isAdmin}))\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to=\"/admin/userlist\">\r\n             Go Back\r\n            </Link>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n            {loading && <Loader />} \r\n            {error && <Message variant=\"danger\">{error}</Message>}   \r\n\r\n            <FormContainer>\r\n            \r\n            <Form onSubmit = {handleEdit}>\r\n                <h2>Edit User</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter your name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"isadmin\">\r\n                    <Form.Label>Is Admin</Form.Label>\r\n                    <Form.Check \r\n                    type=\"checkbox\" \r\n                    label=\"IsAdmin\"\r\n                    checked = {isAdmin}\r\n                    onChange = {(e) => setAdmin(e.target.checked)}  \r\n                   />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                onClick= {handleEdit}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </FormContainer>\r\n       \r\n        </div>\r\n      )\r\n}\r\n\r\nexport default UserEditscreen","import {useEffect} from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\n//My components\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { listProducts,deleteProduct,createProduct } from '../Actions/productActions'\r\nimport {PRODUCT_DELETE_RESET,PRODUCT_CREATE_RESET} from '../Constants/productConstants'\r\n\r\nfunction ProductListscreen ({history}) {\r\n    console.log(\"ProductList\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading,error,products} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {success:successDelete,loading:loadingDelete,error:errorDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {success:successCreate,loading:loadingCreate,error:errorCreate,product:newProduct} = productCreate\r\n\r\n    console.log(\"successCreate\" + successCreate)\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${newProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, newProduct])\r\n\r\n    function deleteHandler(id,name){\r\n        if(window.confirm(`Delete product : ${name}?`)){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    function handleCreateProduct(){\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return loading? (<Loader/>)\r\n                  : error? (<Message variant=\"danger\">{error}</Message>)\r\n                        : (\r\n                            <div>\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col md={10}>\r\n                                 <h1>Products</h1>\r\n                                </Col>\r\n                                <Col className=\"mr-0\" md={2}>\r\n                                    <Button className = \"my-3\" variant=\"primary\" onClick={handleCreateProduct}>\r\n                                    <i className='fas fa-plus'></i> Create Product\r\n                                    </Button>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Table striped bordered hover responsive size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th>EDIT/DELETE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>&#8377;{product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id,product.name)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    )\r\n    }\r\n        \r\n\r\n\r\nexport default ProductListscreen","import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {listProductDetails,updateProduct} from '../Actions/productActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { PRODUCT_UPDATE_RESET } from '../Constants/productConstants'\r\n\r\n\r\nfunction ProductEditscreen({match,history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name,setName] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [brand,setBrand] = useState('')\r\n    const [category,setCategory] = useState('')\r\n    const [image,setImage] = useState('')\r\n    const [countInStock,setCountInStock] = useState(0)\r\n    const [description,setDescription] = useState('')\r\n    const [uploading,setUploading] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading,error,product:newProduct} = productDetails\r\n\r\n    const productUpdate = useSelector(state=>state.productUpdate)\r\n    const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = productUpdate\r\n\r\n    useEffect(()=>{\r\n        if(successUpdate) {\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            history.push(\"/admin/productlist\")\r\n        } else{\r\n            if(!newProduct.name || newProduct._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                if(name !== newProduct.name)\r\n                {\r\n                    setName(newProduct.name)\r\n                    setPrice(newProduct.price)\r\n                    setBrand(newProduct.brand)\r\n                    setCategory(newProduct.category)\r\n                    setImage(newProduct.image)\r\n                    setCountInStock(newProduct.countInStock)\r\n                    setDescription(newProduct.description)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    },[dispatch,productId,newProduct,successUpdate])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:newProduct._id,\r\n            name,\r\n            price,\r\n            brand,\r\n            category,\r\n            image,\r\n            countInStock,\r\n            description}))\r\n    }\r\n    const uploadImage = async(e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to=\"/admin/productlist\">\r\n             Go Back\r\n            </Link>\r\n\r\n            {loading && <Loader />} \r\n            {error && <Message variant=\"danger\">{error}</Message>}  \r\n\r\n\r\n            <FormContainer>\r\n            \r\n            <Form onSubmit = {handleEdit}>\r\n                <h2>Edit Product</h2>  \r\n                {loadingUpdate && <Loader />} \r\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}  \r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Product Name</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter product name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"price\">\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control \r\n                    type=\"number\" \r\n                    placeholder=\"Enter price\"\r\n                    value = {price}\r\n                    onChange = {(e) => setPrice(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                {uploading && <Loader />}\r\n                <Form.Group className=\"mb-3\" controlId=\"image\">\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Image\"\r\n                    value = {image}\r\n                    onChange = {(e) => setImage(e.target.value)} \r\n                   />\r\n                   <Form.Control\r\n                    type =\"file\"\r\n                    controlId=\"image-file\"\r\n                    label=\"Choose file to upload\"\r\n                    custom\r\n                    onChange = {uploadImage}\r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"brand\">\r\n                    <Form.Label>Brand</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Brand\"\r\n                    value = {brand}\r\n                    onChange = {(e) => setBrand(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"category\">\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Category\"\r\n                    value = {category}\r\n                    onChange = {(e) => setCategory(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"countinstock\">\r\n                    <Form.Label>Stock Level</Form.Label>\r\n                    <Form.Control \r\n                    type=\"number\" \r\n                    placeholder=\"Enter Stock Level\"\r\n                    value = {countInStock}\r\n                    onChange = {(e) => setCountInStock(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter description\"\r\n                    value = {description}\r\n                    onChange = {(e) => setDescription(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                \r\n                \r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                onClick= {handleEdit}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </FormContainer>\r\n       \r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ProductEditscreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { listOrders } from '../Actions/orderActions'\r\n\r\nfunction OrderListscreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>&#8377;{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListscreen","import Container from 'react-bootstrap/Container'\r\nimport { HashRouter, Route } from 'react-router-dom'\r\n//My components\r\nimport Header from './Components/Header'\r\nimport Footer from './Components/Footer'\r\n//My Screens\r\nimport Homescreen from './Screens/Homescreen'\r\nimport Productscreen from './Screens/Productscreen'\r\nimport Cartscreen from './Screens/Cartscreen'\r\nimport Loginscreen from './Screens/Loginscreen'\r\nimport Registerscreen from './Screens/Registerscreen'\r\nimport Profilescreen from './Screens/Profilescreen'\r\nimport Shippingscreen from './Screens/Shippingscreen'\r\nimport Paymentscreen from './Screens/Paymentscreen'\r\nimport PlaceOrderscreen from './Screens/PlaceOrderscreen'\r\nimport Orderscreen from './Screens/Orderscreen'\r\nimport UserListscreen from './Screens/UserListscreen'\r\nimport UserEditscreen from './Screens/UserEditscreen'\r\nimport ProductListscreen from './Screens/ProductListscreen'\r\nimport ProductEditscreen from './Screens/ProductEditscreen'\r\nimport OrderListscreen from './Screens/OrderListscreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/\" component={Homescreen} exact />\r\n          <Route path=\"/product/:id\" component={Productscreen} />\r\n          <Route path=\"/cart/:id?\" component={Cartscreen} />\r\n          <Route path=\"/login\" component={Loginscreen} />\r\n          <Route path=\"/register\" component={Registerscreen} />\r\n          <Route path=\"/profile\" component={Profilescreen} />\r\n          <Route path=\"/shipping\" component={Shippingscreen} />\r\n          <Route path=\"/payment\" component={Paymentscreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderscreen} />\r\n          <Route path=\"/order/:id?\" component={Orderscreen} />\r\n\r\n          <Route path=\"/admin/userlist\" component={UserListscreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditscreen} />\r\n\r\n          <Route path=\"/admin/productlist\" component={ProductListscreen} />\r\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditscreen} />\r\n\r\n          <Route path=\"/admin/orderlist\" component={OrderListscreen} />\r\n\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers,createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { editCartReducer } from './Reducers/cartReducers'\r\nimport { productCreateReducer, \r\n    productDeleteReducer, \r\n    productDetailsReducer, \r\n    productListReducer, \r\n    productTopReducer, \r\n    productUpdateReducer} from './Reducers/productReducers'\r\nimport {\r\n    userDeleteReducer, userDetailsReducer, \r\n    userListReducer, userLoginReducer, \r\n    userRegisterReducer, userUpdateProfileReducer, \r\n    userUpdateReducer} \r\n    from './Reducers/userReducers'\r\nimport {orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderListReducer } from './Reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productTop:productTopReducer,\r\n\r\n    cart: editCartReducer,\r\n\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ?JSON.parse(localStorage.getItem('cartItems'))  \r\n                             :[]\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ?JSON.parse(localStorage.getItem('userInfo'))  \r\n                             :null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ?JSON.parse(localStorage.getItem('shippingAddress'))  \r\n                             :null\r\n\r\nconst initialState = {\r\n    cart:\r\n    {\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddress:shippingAddressFromStorage,\r\n    },\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_RESET,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    \r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../Constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products:[]},action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products:[]}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading:false, products: action.payload}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product:{}},action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {...state,loading:true}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = { },action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false, success:true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        case PRODUCT_DELETE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {product:{}},action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false, success:true, product:action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}},action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false, success:true, product:action.payload}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const productTopReducer = (state = {products:[]},action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true, products:[]}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","//constants\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_CLEAR_ITEMS,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../Constants/cartConstants'\r\n\r\n\r\n\r\nexport const editCartReducer = (state={cartItems:[],shippingAddress:{}},action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM: {\r\n            const newItem = action.payload\r\n            const check = state.cartItems.find(item => item.product===newItem.product)\r\n            if(check){\r\n               return { ...state,\r\n                   cartItems: state.cartItems.map(item => item.product===newItem.product? newItem :item)\r\n                   }\r\n            }else{\r\n                return {...state,\r\n                        cartItems: state.cartItems.concat(newItem) }\r\n            }\r\n\r\n        }\r\n        case CART_REMOVE_ITEM: {\r\n            return{...state,\r\n                    cartItems: state.cartItems.filter(item => item.product!==action.payload)}\r\n            \r\n        }\r\n        case CART_SAVE_SHIPPING_ADDRESS: {\r\n            return{...state, shippingAddress:action.payload}\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD:{\r\n            return{...state, paymentMethod:action.payload}\r\n        }\r\n        case CART_CLEAR_ITEMS:\r\n            return {...state, cartItems:[]}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../Constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {},action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {},action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user:[]},action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state,loading:true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false,user:action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_DETAILS_RESET:\r\n             return { user:{}}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { },action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false,success:true,userInfo:action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return { }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users:[] },action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false,users:action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_LIST_RESET:\r\n            return {users:[] }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {},action) => {\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { },action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return { }\r\n        default :\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n} from '../Constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state={order:{}},action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST: \r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success: true,\r\n                order:action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderDetailsReducer = (state={loading:true,order:{}},action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {loading:true}\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{ loading:false, order:action.payload}\r\n        case ORDER_DETAILS_FAIL:\r\n            return{loading:false, error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderListMyReducer = (state={orders:[]},action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {loading:true}\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{ loading:false, orders:action.payload}\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{loading:false, errors:action.payload}\r\n        case ORDER_LIST_MY_RESET:\r\n            return{ orders:[] }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderListReducer = (state={orders:[]},action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {loading:true}\r\n        case ORDER_LIST_SUCCESS:\r\n            return{ loading:false, orders:action.payload}\r\n        case ORDER_LIST_FAIL:\r\n            return{loading:false, errors:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// For redux store\r\nimport {Provider} from 'react-redux'\r\nimport store from './store'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}