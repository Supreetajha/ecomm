[{"C:\\Users\\supre\\Documents\\ecomm\\src\\index.js":"1","C:\\Users\\supre\\Documents\\ecomm\\src\\reportWebVitals.js":"2","C:\\Users\\supre\\Documents\\ecomm\\src\\App.js":"3","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Header.js":"4","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Footer.js":"5","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Homescreen.js":"6","C:\\Users\\supre\\Documents\\ecomm\\src\\products.js":"7","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Product.js":"8","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Rating.js":"9","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Productscreen.js":"10","C:\\Users\\supre\\Documents\\ecomm\\src\\store.js":"11","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\productReducers.js":"12","C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\productConstants.js":"13","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Loader.js":"14","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Message.js":"15","C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\productActions.js":"16","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Cartscreen.js":"17","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\cartReducers.js":"18","C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\cartActions.js":"19","C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\cartConstants.js":"20","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Loginscreen.js":"21","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\userReducers.js":"22","C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\userConstants.js":"23","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\FormContainer.js":"24","C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\userActions.js":"25","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Registerscreen.js":"26","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Profilescreen.js":"27","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Shippingscreen.js":"28","C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\CheckoutSteps.js":"29","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Paymentscreen.js":"30","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\PlaceOrderscreen.js":"31","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\orderReducers.js":"32","C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\orderConstants.js":"33","C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\orderActions.js":"34","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Orderscreen.js":"35","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\UserListscreen.js":"36","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\UserEditscreen.js":"37","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\ProductListscreen.js":"38","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\ProductEditscreen.js":"39","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\OrderListscreen.js":"40"},{"size":613,"mtime":1630147268959,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":2260,"mtime":1631294439096,"results":"44","hashOfConfig":"42"},{"size":3098,"mtime":1631123710444,"results":"45","hashOfConfig":"42"},{"size":422,"mtime":1629739777431,"results":"46","hashOfConfig":"42"},{"size":1205,"mtime":1630298421919,"results":"47","hashOfConfig":"42"},{"size":2606,"mtime":1629798254404,"results":"48","hashOfConfig":"42"},{"size":1191,"mtime":1629794630758,"results":"49","hashOfConfig":"42"},{"size":1611,"mtime":1629739987141,"results":"50","hashOfConfig":"42"},{"size":4850,"mtime":1630318000390,"results":"51","hashOfConfig":"42"},{"size":2322,"mtime":1631295324571,"results":"52","hashOfConfig":"42"},{"size":2872,"mtime":1631289573914,"results":"53","hashOfConfig":"42"},{"size":1110,"mtime":1631289515479,"results":"54","hashOfConfig":"42"},{"size":248,"mtime":1630173613120,"results":"55","hashOfConfig":"42"},{"size":205,"mtime":1630173912473,"results":"56","hashOfConfig":"42"},{"size":4039,"mtime":1631289757511,"results":"57","hashOfConfig":"42"},{"size":6064,"mtime":1630945841041,"results":"58","hashOfConfig":"42"},{"size":1356,"mtime":1630988667820,"results":"59","hashOfConfig":"42"},{"size":1561,"mtime":1631209333844,"results":"60","hashOfConfig":"42"},{"size":293,"mtime":1630923363857,"results":"61","hashOfConfig":"42"},{"size":2793,"mtime":1631089722721,"results":"62","hashOfConfig":"42"},{"size":3903,"mtime":1631094207156,"results":"63","hashOfConfig":"42"},{"size":1508,"mtime":1631093823746,"results":"64","hashOfConfig":"42"},{"size":392,"mtime":1630479130661,"results":"65","hashOfConfig":"42"},{"size":6782,"mtime":1631295573974,"results":"66","hashOfConfig":"42"},{"size":4031,"mtime":1631089737562,"results":"67","hashOfConfig":"42"},{"size":7637,"mtime":1631295947260,"results":"68","hashOfConfig":"42"},{"size":3366,"mtime":1630940290821,"results":"69","hashOfConfig":"42"},{"size":1626,"mtime":1630923151920,"results":"70","hashOfConfig":"42"},{"size":2467,"mtime":1630940280269,"results":"71","hashOfConfig":"42"},{"size":6804,"mtime":1631008075977,"results":"72","hashOfConfig":"42"},{"size":2340,"mtime":1631295260238,"results":"73","hashOfConfig":"42"},{"size":814,"mtime":1631295033730,"results":"74","hashOfConfig":"42"},{"size":3837,"mtime":1631295490211,"results":"75","hashOfConfig":"42"},{"size":5628,"mtime":1631008128714,"results":"76","hashOfConfig":"42"},{"size":3512,"mtime":1631084809303,"results":"77","hashOfConfig":"42"},{"size":3800,"mtime":1631265925567,"results":"78","hashOfConfig":"42"},{"size":4797,"mtime":1631198614986,"results":"79","hashOfConfig":"42"},{"size":7137,"mtime":1631293981149,"results":"80","hashOfConfig":"42"},{"size":3619,"mtime":1631294589020,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"lu5l2x",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\supre\\Documents\\ecomm\\src\\index.js",[],["175","176"],"C:\\Users\\supre\\Documents\\ecomm\\src\\reportWebVitals.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\App.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Header.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Footer.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Homescreen.js",["177"],"import Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport { useState,useEffect } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n//My components\r\nimport Product from '../Components/Product'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\n//actions\r\nimport {listProducts} from '../Actions/productActions'\r\n\r\nfunction Homescreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {products,error,loading} = productList\r\n    \r\n    useEffect(()=>{\r\n        dispatch(listProducts())\r\n        \r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n   <div>\r\n       {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    : ( <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={8} lg={6} xl={4}>\r\n                            <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    \r\n                    </Row> )\r\n        }\r\n    </div>\r\n    \r\n    )\r\n\r\n}\r\n\r\nexport default Homescreen","C:\\Users\\supre\\Documents\\ecomm\\src\\products.js",[],["178","179"],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Product.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Rating.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Productscreen.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\store.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\productReducers.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\productConstants.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Loader.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\Message.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\productActions.js",["180","181"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_RESET,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n\r\n} from '../Constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = () => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n        const {data} = await axios.get('/api/products/')\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload:data})\r\n\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, \r\n                 payload:error.response&&error.response.data.detail\r\n                         ?error.response.data.detail\r\n                         :error.message})\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}/`)\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data})\r\n\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, \r\n                payload:error.response&&error.response.data.detail\r\n                        ?error.response.data.detail\r\n                        :error.message})\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:PRODUCT_DELETE_REQUEST})\r\n\r\n        const {data} = await axios.delete(`/api/products/delete/${id}/`,\r\n                        config)\r\n\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: PRODUCT_DELETE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const createProduct = () => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:PRODUCT_CREATE_REQUEST})\r\n\r\n        const {data} = await axios.post(`/api/products/create/`,\r\n                        {},\r\n                        config)\r\n\r\n        dispatch({type: PRODUCT_CREATE_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: PRODUCT_CREATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:PRODUCT_UPDATE_REQUEST})\r\n\r\n        const {data} = await axios.put(`/api/products/update/${product._id}/`,\r\n                        product,\r\n                        config)\r\n\r\n        dispatch({type: PRODUCT_UPDATE_SUCCESS, payload:data})\r\n\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: PRODUCT_UPDATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Cartscreen.js",["182"],"import { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Row,Col,ListGroup,Image,Form,Button,Card} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Actions\r\nimport {addToCart,removeFromCart } from '../Actions/cartActions'\r\n\r\n//My components\r\nimport Message from '../Components/Message'\r\n\r\n\r\nfunction Cartscreen({match,location,history}) {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const qty = parseInt(queryParams.get('qty'));\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    \r\n    useEffect(()=>{\r\n        if(match.params.id){\r\n            dispatch(addToCart(match.params.id,qty))\r\n        }\r\n    },[dispatch,match.params.id,qty])\r\n\r\n    const handleRemoveFromCart = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const handleCheckout = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    \r\n    console.log(cartItems)\r\n  \r\n    return(\r\n        <Row>\r\n            <Col xs={12} md={8}>\r\n                <h2>Shopping Cart</h2>\r\n                {cartItems.length?\r\n                                    (<ListGroup variant=\"flush\">\r\n                                        {cartItems.map(item => (\r\n                                            <ListGroup.Item key={item.product}>\r\n                                                <Row className = \"align-items-start\">\r\n                                                    <Col xs={3} md={2} >\r\n                                                        <Link to = {`/product/${item.product}`}>\r\n                                                         <Image src={item.image} alt={item.name} fluid thumbnail/>\r\n                                                        </Link>\r\n                                                       \r\n                                                    </Col>\r\n                                                    <Col xs={3} md={3}>\r\n                                                        <Link className = \"text-decoration-none align-middle\" to = {`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col xs={3} md={2} className = \"py-1\">\r\n                                                       <span className=\"align-middle\">&#8377;{item.price}</span>\r\n                                                    </Col>\r\n                                                    <Col xs={2} md={2} className=\"py-1\">\r\n                                                        <label htmlFor=\"qty\">Qty</label> \r\n                                                        <select\r\n                                                            id=\"qty\"\r\n                                                            value={item.qty}\r\n                                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                                        >\r\n                                                            {\r\n\r\n                                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </select>\r\n                                                    </Col>\r\n                                                    <Col xs={1} md={1}>\r\n                                                        <Button\r\n                                                            type='button'\r\n                                                            variant='light'\r\n                                                            onClick={() => handleRemoveFromCart(item.product)}\r\n                                                        >\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                                \r\n\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                    )\r\n                                    : <Message variant=\"info\">Your cart is empty. <Link to=\"/\">Start shopping</Link></Message>\r\n                }\r\n            </Col>\r\n\r\n            <Col xs={8} md={4}>\r\n            <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>Total ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h3>\r\n                            <h4>Amount &#8377;{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</h4>\r\n                        </ListGroup.Item>\r\n                   \r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={handleCheckout}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Cartscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\cartReducers.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\cartActions.js",["183"],"import axios from 'axios'\r\n\r\n\r\n//constants\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_CLEAR_ITEMS,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../Constants/cartConstants'\r\n\r\nexport const addToCart = (id,qty) => async(dispatch,getState) => {\r\n    try{\r\n        const {data} = await axios.get(`/api/products/${id}/`)\r\n        const item  = {\r\n                         product : id,\r\n                         name: data.name,\r\n                         image: data.image,\r\n                         price: data.price,\r\n                         countInStock: data.countInStock,\r\n                         qty\r\n                        }\r\n        dispatch({type: CART_ADD_ITEM, payload:item})\r\n\r\n\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async(dispatch,getState) => {\r\n   \r\n        dispatch({type: CART_REMOVE_ITEM, payload:id})\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (shippingAddress) => async(dispatch) => {\r\n   \r\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload:shippingAddress})\r\nlocalStorage.setItem('shippingAddress', JSON.stringify(shippingAddress))\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async(dispatch) => {\r\n   \r\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload:paymentMethod})\r\nlocalStorage.setItem('paymentMethod', JSON.stringify(paymentMethod))\r\n}\r\n\r\n","C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\cartConstants.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Loginscreen.js",["184","185"],"import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Link } from 'react-router-dom'\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {login} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nfunction Loginscreen({location,history}) {\r\n    const [email,setEmail] = useState()\r\n    const [password,setPassword] = useState()\r\n    const dispatch = useDispatch()\r\n    \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {loading,error,userInfo} = userLogin\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const redirect = queryParams.get('redirect')\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(`/`)\r\n        }\r\n    },[userInfo])\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n    return(\r\n        <FormContainer>\r\n            {loading && <Loader />}\r\n            {error && <Message variant =\"danger\">{error}</Message>}\r\n            <Form onSubmit = {handleLogin}>\r\n                <h2>Sign-In</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}  />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" onClick= {handleLogin}>\r\n                    Submit\r\n                </Button>\r\n\r\n                <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to=\"/register\">\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n            </Form>\r\n            </FormContainer>\r\n        )\r\n}\r\n\r\nexport default Loginscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\userReducers.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\userConstants.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\FormContainer.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\userActions.js",["186","187","188","189"],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Registerscreen.js",["190","191","192"],"import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Link } from 'react-router-dom'\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {register} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\nfunction Registerscreen({location,history}) {\r\n    const [name,setName] = useState()\r\n    const [email,setEmail] = useState()\r\n    const [password,setPassword] = useState()\r\n    const [confirmPassword,setConfirmPassword] = useState()\r\n    const [message,setMessage] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading,error,userInfo} = userRegister\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(\"/\")\r\n        }\r\n    },[userInfo])\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        dispatch(register(name,email,password))\r\n    }\r\n    return(\r\n        <FormContainer>\r\n            {loading && <Loader />}\r\n            {error && <Message variant =\"danger\">{error}</Message>}\r\n            <Form onSubmit = {handleRegister}>\r\n                <h2>Sign-Up</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter your name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                    required />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                    required />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}  \r\n                    required/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm Password\"\r\n                    value = {confirmPassword}\r\n                    onChange = {(e) => setConfirmPassword(e.target.value)}  \r\n                    required/>\r\n                </Form.Group>\r\n                {confirmPassword && (password !== confirmPassword) &&\r\n                 <Message variant=\"danger\">Passwords do not match </Message>}\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                disabled = {confirmPassword && (password !== confirmPassword)}\r\n                onClick= {handleRegister}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Alredy have an account? <Link\r\n                        to=\"/login\">\r\n                        Sign-in\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n            </FormContainer>\r\n        )\r\n}\r\n\r\nexport default Registerscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Profilescreen.js",["193"],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Shippingscreen.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Components\\CheckoutSteps.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Paymentscreen.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\PlaceOrderscreen.js",["194","195"],"import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\nimport { createOrder } from '../Actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../Constants/orderConstants'\r\n\r\nfunction PlaceOrderscreen({ history }) {\r\n    \r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.18) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            console.log(order._id)\r\n            history.push(`/order/${order._id}`)\r\n            //dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n\r\n    const placeOrder = () => {\r\n\r\n       dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X &#8377;{item.price} = &#8377;{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>&#8377;{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>&#8377;{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>GST:</Col>\r\n                                    <Col>&#8377;{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>&#8377;{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Reducers\\orderReducers.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Constants\\orderConstants.js",[],"C:\\Users\\supre\\Documents\\ecomm\\src\\Actions\\orderActions.js",["196","197"],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\Orderscreen.js",["198"],"import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader'\r\n\r\nimport { getOrderDetails} from '../Actions/orderActions'\r\n\r\n\r\nfunction Orderscreen({ match}) {\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order,loading, error } = orderDetails\r\n    const orderId = match.params.id\r\n    console.log(orderId)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        if (!order || order._id !== Number(orderId)) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [dispatch,order,orderId])\r\n\r\n\r\n\r\n    return loading? (<Loader />)\r\n            : error? (<Message variant=\"danger\">{error}</Message>)\r\n            :(<div>\r\n                <h1>Order: {order.Id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Payment pending</Message>\r\n                                        )}\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Your order is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X &#8377;{item.price} = &#8377;{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>&#8377;{(order.totalPrice-order.taxPrice-order.shippingPrice).toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>&#8377;{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>GST:</Col>\r\n                                    <Col>&#8377;{order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>&#8377;{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>)\r\n}\r\n\r\nexport default Orderscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\UserListscreen.js",["199","200"],"import react ,{useEffect,useState} from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getUserList,deleteUser} from '../Actions/userActions'\r\n\r\n//My components\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\nfunction UserListscreen ({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading,error,users} = userList\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = {userDelete}\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin)  {\r\n           dispatch(getUserList()) \r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,userInfo,history,successDelete])\r\n\r\n    function deleteHandler(id,name){\r\n        if(window.confirm(`Delete user ${name}?`)){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return loading? (<Loader/>)\r\n                  : error? (<Message variant=\"danger\">{error}</Message>)\r\n                        : (\r\n                            <Table striped bordered hover responsive size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th>EDIT/DELETE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id,user.name)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n    }\r\n        \r\n\r\n\r\nexport default UserListscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\UserEditscreen.js",["201"],"import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {getUserDetails,updateUser} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { USER_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\nfunction UserEditscreen({match,history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [isAdmin,setAdmin] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {loading,error,user} = userDetails\r\n\r\n    const userUpdate = useSelector(state=>state.userUpdate)\r\n    const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\r\n\r\n    useEffect(()=>{\r\n        if (successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }\r\n        if(!user._id || user._id!== Number(userId)){\r\n            dispatch(getUserDetails(userId))\r\n        } else{\r\n            if(user.name !== name) {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    },[dispatch,userId,user,successUpdate,history])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id,name,email,isAdmin}))\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to=\"/admin/userlist\">\r\n             Go Back\r\n            </Link>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n            {loading && <Loader />} \r\n            {error && <Message variant=\"danger\">{error}</Message>}   \r\n\r\n            <FormContainer>\r\n            \r\n            <Form onSubmit = {handleEdit}>\r\n                <h2>Edit User</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter your name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"isadmin\">\r\n                    <Form.Label>Is Admin</Form.Label>\r\n                    <Form.Check \r\n                    type=\"checkbox\" \r\n                    label=\"IsAdmin\"\r\n                    checked = {isAdmin}\r\n                    onChange = {(e) => setAdmin(e.target.checked)}  \r\n                   />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                onClick= {handleEdit}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </FormContainer>\r\n       \r\n        </div>\r\n      )\r\n}\r\n\r\nexport default UserEditscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\ProductListscreen.js",["202","203","204","205","206"],"import {useEffect} from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\n//My components\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { listProducts,deleteProduct,createProduct } from '../Actions/productActions'\r\nimport {PRODUCT_DELETE_RESET,PRODUCT_CREATE_RESET} from '../Constants/productConstants'\r\n\r\nfunction ProductListscreen ({history}) {\r\n    console.log(\"ProductList\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading,error,products} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {success:successDelete,loading:loadingDelete,error:errorDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {success:successCreate,loading:loadingCreate,error:errorCreate,product:newProduct} = productCreate\r\n\r\n    console.log(\"successCreate\" + successCreate)\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${newProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, newProduct])\r\n\r\n    function deleteHandler(id,name){\r\n        if(window.confirm(`Delete product : ${name}?`)){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    function handleCreateProduct(){\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return loading? (<Loader/>)\r\n                  : error? (<Message variant=\"danger\">{error}</Message>)\r\n                        : (\r\n                            <div>\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col md={10}>\r\n                                 <h1>Products</h1>\r\n                                </Col>\r\n                                <Col className=\"mr-0\" md={2}>\r\n                                    <Button className = \"my-3\" variant=\"primary\" onClick={handleCreateProduct}>\r\n                                    <i className='fas fa-plus'></i> Create Product\r\n                                    </Button>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Table striped bordered hover responsive size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th>EDIT/DELETE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>&#8377;{product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id,product.name)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    )\r\n    }\r\n        \r\n\r\n\r\nexport default ProductListscreen","C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\ProductEditscreen.js",["207"],"C:\\Users\\supre\\Documents\\ecomm\\src\\Screens\\OrderListscreen.js",["208"],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":18},{"ruleId":"209","replacedBy":"217"},{"ruleId":"211","replacedBy":"218"},{"ruleId":"213","severity":1,"message":"219","line":13,"column":5,"nodeType":"215","messageId":"216","endLine":13,"endColumn":25},{"ruleId":"213","severity":1,"message":"220","line":69,"column":16,"nodeType":"215","messageId":"216","endLine":69,"endColumn":20},{"ruleId":"213","severity":1,"message":"221","line":3,"column":33,"nodeType":"215","messageId":"216","endLine":3,"endColumn":37},{"ruleId":"213","severity":1,"message":"222","line":8,"column":5,"nodeType":"215","messageId":"216","endLine":8,"endColumn":21},{"ruleId":"213","severity":1,"message":"223","line":22,"column":11,"nodeType":"215","messageId":"216","endLine":22,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":28,"column":7,"nodeType":"226","endLine":28,"endColumn":17,"suggestions":"227"},{"ruleId":"213","severity":1,"message":"228","line":24,"column":5,"nodeType":"215","messageId":"216","endLine":24,"endColumn":30},{"ruleId":"213","severity":1,"message":"229","line":29,"column":5,"nodeType":"215","messageId":"216","endLine":29,"endColumn":20},{"ruleId":"213","severity":1,"message":"220","line":183,"column":16,"nodeType":"215","messageId":"216","endLine":183,"endColumn":20},{"ruleId":"213","severity":1,"message":"220","line":209,"column":16,"nodeType":"215","messageId":"216","endLine":209,"endColumn":20},{"ruleId":"213","severity":1,"message":"230","line":20,"column":12,"nodeType":"215","messageId":"216","endLine":20,"endColumn":19},{"ruleId":"213","severity":1,"message":"231","line":20,"column":20,"nodeType":"215","messageId":"216","endLine":20,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":31,"column":7,"nodeType":"226","endLine":31,"endColumn":17,"suggestions":"232"},{"ruleId":"213","severity":1,"message":"233","line":10,"column":14,"nodeType":"215","messageId":"216","endLine":10,"endColumn":18},{"ruleId":"213","severity":1,"message":"234","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":28},{"ruleId":"224","severity":1,"message":"235","line":37,"column":8,"nodeType":"226","endLine":37,"endColumn":26,"suggestions":"236"},{"ruleId":"213","severity":1,"message":"234","line":5,"column":5,"nodeType":"215","messageId":"216","endLine":5,"endColumn":23},{"ruleId":"213","severity":1,"message":"237","line":14,"column":5,"nodeType":"215","messageId":"216","endLine":14,"endColumn":24},{"ruleId":"213","severity":1,"message":"238","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":16},{"ruleId":"213","severity":1,"message":"239","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":13},{"ruleId":"213","severity":1,"message":"214","line":1,"column":26,"nodeType":"215","messageId":"216","endLine":1,"endColumn":34},{"ruleId":"224","severity":1,"message":"240","line":47,"column":7,"nodeType":"226","endLine":47,"endColumn":51,"suggestions":"241"},{"ruleId":"213","severity":1,"message":"219","line":13,"column":9,"nodeType":"215","messageId":"216","endLine":13,"endColumn":29},{"ruleId":"213","severity":1,"message":"242","line":27,"column":42,"nodeType":"215","messageId":"216","endLine":27,"endColumn":55},{"ruleId":"213","severity":1,"message":"243","line":27,"column":62,"nodeType":"215","messageId":"216","endLine":27,"endColumn":73},{"ruleId":"213","severity":1,"message":"244","line":30,"column":42,"nodeType":"215","messageId":"216","endLine":30,"endColumn":55},{"ruleId":"213","severity":1,"message":"245","line":30,"column":62,"nodeType":"215","messageId":"216","endLine":30,"endColumn":73},{"ruleId":"224","severity":1,"message":"246","line":60,"column":7,"nodeType":"226","endLine":60,"endColumn":52,"suggestions":"247"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["248"],["249"],"'PRODUCT_DELETE_RESET' is defined but never used.","'data' is assigned a value but never used.","'Form' is defined but never used.","'CART_CLEAR_ITEMS' is defined but never used.","'redirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_LIST_RESET' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["251"],"'Link' is defined but never used.","'ORDER_CREATE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["252"],"'ORDER_LIST_MY_RESET' is defined but never used.","'Button' is defined but never used.","'react' is defined but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["253"],"'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'name'. Either include them or remove the dependency array.",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [history, userInfo]",{"range":"264","text":"265"},{"range":"266","text":"265"},"Update the dependencies array to be: [success, history, order._id]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, userId, user, successUpdate, history, name]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch, productId, newProduct, successUpdate, history, name]",{"range":"271","text":"272"},[1005,1015],"[history, userInfo]",[1049,1059],[1339,1357],"[success, history, order._id]",[1501,1545],"[dispatch, userId, user, successUpdate, history, name]",[2184,2229],"[dispatch, productId, newProduct, successUpdate, history, name]"]