{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supre\\\\Documents\\\\ecomm\\\\src\\\\Screens\\\\UserListscreen.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserList, deleteUser } from '../Actions/userActions'; //My components\n\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserListscreen({\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = {\n    userDelete\n  };\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getUserList());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, userInfo, history, successDelete]);\n\n  function deleteHandler(id, name) {\n    if (window.confirm(`Delete user ${name}?`)) {\n      dispatch(deleteUser(id));\n    }\n  }\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 22\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    size: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ADMIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"EDIT/DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check\",\n            style: {\n              color: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\",\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n            to: `/admin/user/${user._id}/edit`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              className: \"btn-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            className: \"btn-sm\",\n            onClick: () => deleteHandler(user._id, user.name),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 29\n  }, this);\n}\n\n_s(UserListscreen, \"GkQDYbgauShTQWn4Cwrb/jqR1ig=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserListscreen;\nexport default UserListscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListscreen\");","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/Screens/UserListscreen.js"],"names":["react","useEffect","useState","Table","Button","LinkContainer","useDispatch","useSelector","getUserList","deleteUser","Loader","Message","UserListscreen","history","dispatch","userLogin","state","userInfo","userList","loading","error","users","userDelete","success","successDelete","isAdmin","push","deleteHandler","id","name","window","confirm","map","user","_id","email","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,WAAR,EAAoBC,UAApB,QAAqC,wBAArC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,SAASC,cAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAoC;AAAA;;AAChC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,SAAS,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AACA,QAAM;AAACE,IAAAA;AAAD,MAAaF,SAAnB;AAEA,QAAMG,QAAQ,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,QAAhB,CAA5B;AACA,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAAwBH,QAA9B;AAEA,QAAMI,UAAU,GAAGf,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACM,UAAhB,CAA9B;AACA,QAAM;AAACC,IAAAA,OAAO,EAACC;AAAT,MAA0B;AAACF,IAAAA;AAAD,GAAhC;AAEArB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGgB,QAAQ,IAAIA,QAAQ,CAACQ,OAAxB,EAAkC;AAC/BX,MAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACF,KAFD,MAEK;AACDK,MAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACH;AACJ,GANQ,EAMP,CAACZ,QAAD,EAAUG,QAAV,EAAmBJ,OAAnB,EAA2BW,aAA3B,CANO,CAAT;;AAQA,WAASG,aAAT,CAAuBC,EAAvB,EAA0BC,IAA1B,EAA+B;AAC3B,QAAGC,MAAM,CAACC,OAAP,CAAgB,eAAcF,IAAK,GAAnC,CAAH,EAA0C;AACtCf,MAAAA,QAAQ,CAACL,UAAU,CAACmB,EAAD,CAAX,CAAR;AACH;AACJ;;AAED,SAAOT,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GACEC,KAAK,gBAAG,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA,cAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAH,gBAEG,QAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,UAAU,MAAxC;AAAyC,IAAA,IAAI,EAAC,IAA9C;AAAA,4BACJ;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,eAUA;AAAA,gBACCC,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACP;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,IAAI,CAACJ;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKI,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKF,IAAI,CAACR,OAAL,gBACD;AAAG,YAAA,SAAS,EAAC,cAAb;AAA4B,YAAA,KAAK,EAAE;AAAEW,cAAAA,KAAK,EAAE;AAAT;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADC,gBAGG;AAAG,YAAA,SAAS,EAAC,cAAb;AAA4B,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT;AAAnC;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI;AAAA,kCACI,QAAC,aAAD;AAAe,YAAA,EAAE,EAAG,eAAcH,IAAI,CAACC,GAAI,OAA3C;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,OAAhB;AAAwB,cAAA,SAAS,EAAC,QAAlC;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,SAAS,EAAC,QAAnC;AAA4C,YAAA,OAAO,EAAE,MAAMP,aAAa,CAACM,IAAI,CAACC,GAAN,EAAUD,IAAI,CAACJ,IAAf,CAAxE;AAAA,mCACI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,SAASI,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,cADP;AADD;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHxB;AA0CC;;GApEItB,c;UACYN,W,EAECC,W,EAGDA,W,EAGEA,W;;;KATdK,c;AAwET,eAAeA,cAAf","sourcesContent":["import react ,{useEffect,useState} from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getUserList,deleteUser} from '../Actions/userActions'\r\n\r\n//My components\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\nfunction UserListscreen ({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading,error,users} = userList\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = {userDelete}\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin)  {\r\n           dispatch(getUserList()) \r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,userInfo,history,successDelete])\r\n\r\n    function deleteHandler(id,name){\r\n        if(window.confirm(`Delete user ${name}?`)){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return loading? (<Loader/>)\r\n                  : error? (<Message variant=\"danger\">{error}</Message>)\r\n                        : (\r\n                            <Table striped bordered hover responsive size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th>EDIT/DELETE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id,user.name)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n    }\r\n        \r\n\r\n\r\nexport default UserListscreen"]},"metadata":{},"sourceType":"module"}