{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { editCartReducer } from './Reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from './Reducers/productReducers';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './Reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: editCartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/store.js"],"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","thunk","editCartReducer","productDetailsReducer","productListReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAAyCC,WAAzC,QAA2D,OAA3D;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAAQC,kBAAR,EAA4BC,gBAA5B,EAA8CC,mBAA9C,EAAmEC,wBAAnE,QAAkG,yBAAlG;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAACN,kBADgB;AAE5BO,EAAAA,cAAc,EAACR,qBAFa;AAG5BS,EAAAA,IAAI,EAAEV,eAHsB;AAI5BW,EAAAA,SAAS,EAACP,gBAJkB;AAK5BQ,EAAAA,YAAY,EAACP,mBALe;AAM5BQ,EAAAA,WAAW,EAACV,kBANgB;AAO5BW,EAAAA,iBAAiB,EAAER;AAPS,CAAD,CAA/B;AAUA,MAAMS,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADD,GAEC,EAF9B;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADF,GAEE,IAF9B;AAGA,MAAMI,YAAY,GAAG;AACjBX,EAAAA,IAAI,EAAC;AAACY,IAAAA,SAAS,EAACP;AAAX,GADY;AAEjBJ,EAAAA,SAAS,EAAC;AAACY,IAAAA,QAAQ,EAACH;AAAV;AAFO,CAArB;AAKA,MAAMI,UAAU,GAAG,CAACzB,KAAD,CAAnB;AACA,MAAM0B,KAAK,GAAG5B,WAAW,CAACU,OAAD,EAASc,YAAT,EACrBvB,mBAAmB,CAACH,eAAe,CAAC,GAAG6B,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import {applyMiddleware, combineReducers,createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { editCartReducer } from './Reducers/cartReducers'\r\nimport { productDetailsReducer, productListReducer } from './Reducers/productReducers'\r\nimport {userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer} from './Reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart: editCartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ?JSON.parse(localStorage.getItem('cartItems'))  \r\n                             :[]\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ?JSON.parse(localStorage.getItem('userInfo'))  \r\n                             :null\r\nconst initialState = {\r\n    cart:{cartItems:cartItemsFromStorage},\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}