{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supre\\\\Documents\\\\ecomm\\\\src\\\\Screens\\\\ProductEditscreen.js\";\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom'; //My components\n\nimport FormContainer from '../Components/FormContainer';\nimport { getUserDetails, updateUser } from '../Actions/userActions';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { USER_UPDATE_RESET } from '../Constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductEditscreen({\n  match,\n  history\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Edit Product\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n  /*    const userId = match.params.id\r\n  \r\n      const [name,setName] = useState()\r\n      const [email,setEmail] = useState()\r\n      const [isAdmin,setAdmin] = useState(false)\r\n  \r\n  \r\n      const dispatch = useDispatch()\r\n      \r\n      const userDetails = useSelector(state=>state.userDetails)\r\n      const {loading,error,user} = userDetails\r\n  \r\n      const userUpdate = useSelector(state=>state.userUpdate)\r\n      const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\r\n  \r\n      useEffect(()=>{\r\n          if (successUpdate) {\r\n              dispatch({type: USER_UPDATE_RESET})\r\n              history.push('/admin/userlist')\r\n          }\r\n          if(!user._id || user._id!== Number(userId)){\r\n              dispatch(getUserDetails(userId))\r\n          } else{\r\n              setName(user.name)\r\n              setEmail(user.email)\r\n              setAdmin(user.isAdmin)\r\n          }\r\n  \r\n      },[dispatch,userId,user,successUpdate])\r\n  \r\n      const handleEdit = (e) => {\r\n          e.preventDefault()\r\n          dispatch(updateUser({_id:user._id,name,email,isAdmin}))\r\n      }\r\n      return(\r\n          <div>\r\n              <Link to=\"/admin/userlist\">\r\n               Go Back\r\n              </Link>\r\n              {loadingUpdate && <Loader />}\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n  \r\n              {loading && <Loader />} \r\n              {error && <Message variant=\"danger\">{error}</Message>}   \r\n  \r\n              <FormContainer>\r\n              \r\n              <Form onSubmit = {handleEdit}>\r\n                  <h2>Edit User</h2>  \r\n                  <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                      <Form.Label>UserName</Form.Label>\r\n                      <Form.Control \r\n                      type=\"text\" \r\n                      placeholder=\"Enter your name\"\r\n                      value = {name}\r\n                      onChange = {(e) => setName(e.target.value)} \r\n                     />\r\n                  </Form.Group>\r\n  \r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Email address</Form.Label>\r\n                      <Form.Control \r\n                      type=\"email\" \r\n                      placeholder=\"Enter email\"\r\n                      value = {email}\r\n                      onChange = {(e) => setEmail(e.target.value)}\r\n                      />\r\n                      <Form.Text className=\"text-muted\">\r\n                          Please enter a valid email id \r\n                      </Form.Text>\r\n                  </Form.Group>\r\n  \r\n                  <Form.Group className=\"mb-3\" controlId=\"isadmin\">\r\n                      <Form.Label>Is Admin</Form.Label>\r\n                      <Form.Check \r\n                      type=\"checkbox\" \r\n                      label=\"IsAdmin\"\r\n                      checked = {isAdmin}\r\n                      onChange = {(e) => setAdmin(e.target.checked)}  \r\n                     />\r\n                  </Form.Group>\r\n  \r\n                  <Button variant=\"primary\" \r\n                  type=\"submit\" \r\n                  onClick= {handleEdit}>\r\n                      Update\r\n                  </Button>\r\n              </Form>\r\n              </FormContainer>\r\n         \r\n          </div>\r\n        )*/\n}\n\n_c = ProductEditscreen;\nexport default ProductEditscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditscreen\");","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/Screens/ProductEditscreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Form","Button","Link","FormContainer","getUserDetails","updateUser","Loader","Message","USER_UPDATE_RESET","ProductEditscreen","match","history"],"mappings":";AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,cAAR,EAAuBC,UAAvB,QAAwC,wBAAxC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;;AAEA,SAASC,iBAAT,CAA2B;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAA3B,EAA4C;AACxC,siB;AAiGT,eAAeA,iBAAf","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {getUserDetails,updateUser} from '../Actions/userActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { USER_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\nfunction ProductEditscreen({match,history}) {\r\n    return(<h1>Edit Product</h1>)\r\n\r\n/*    const userId = match.params.id\r\n\r\n    const [name,setName] = useState()\r\n    const [email,setEmail] = useState()\r\n    const [isAdmin,setAdmin] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {loading,error,user} = userDetails\r\n\r\n    const userUpdate = useSelector(state=>state.userUpdate)\r\n    const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\r\n\r\n    useEffect(()=>{\r\n        if (successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }\r\n        if(!user._id || user._id!== Number(userId)){\r\n            dispatch(getUserDetails(userId))\r\n        } else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setAdmin(user.isAdmin)\r\n        }\r\n\r\n    },[dispatch,userId,user,successUpdate])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id,name,email,isAdmin}))\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to=\"/admin/userlist\">\r\n             Go Back\r\n            </Link>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n            {loading && <Loader />} \r\n            {error && <Message variant=\"danger\">{error}</Message>}   \r\n\r\n            <FormContainer>\r\n            \r\n            <Form onSubmit = {handleEdit}>\r\n                <h2>Edit User</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter your name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\"\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Please enter a valid email id \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"isadmin\">\r\n                    <Form.Label>Is Admin</Form.Label>\r\n                    <Form.Check \r\n                    type=\"checkbox\" \r\n                    label=\"IsAdmin\"\r\n                    checked = {isAdmin}\r\n                    onChange = {(e) => setAdmin(e.target.checked)}  \r\n                   />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                onClick= {handleEdit}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </FormContainer>\r\n       \r\n        </div>\r\n      )*/\r\n}\r\n\r\nexport default ProductEditscreen"]},"metadata":{},"sourceType":"module"}