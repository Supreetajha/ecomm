{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { editCartReducer } from './Reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from './Reducers/productReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './Reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './Reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: editCartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/store.js"],"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","thunk","editCartReducer","productDetailsReducer","productListReducer","userDeleteReducer","userDetailsReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAAyCC,WAAzC,QAA2D,OAA3D;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,EAA+CC,eAA/C,EAAgEC,gBAAhE,EAAkFC,mBAAlF,EAAuGC,wBAAvG,EAAiIC,iBAAjI,QAAyJ,yBAAzJ;AACA,SAAQC,kBAAR,EAA4BC,mBAA5B,QAAuD,0BAAvD;AAEA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC5BiB,EAAAA,WAAW,EAACX,kBADgB;AAE5BY,EAAAA,cAAc,EAACb,qBAFa;AAG5Bc,EAAAA,IAAI,EAAEf,eAHsB;AAI5BgB,EAAAA,SAAS,EAACV,gBAJkB;AAK5BW,EAAAA,YAAY,EAACV,mBALe;AAM5BW,EAAAA,WAAW,EAACd,kBANgB;AAO5Be,EAAAA,iBAAiB,EAAEX,wBAPS;AAQ5BY,EAAAA,QAAQ,EAACf,eARmB;AAS5BgB,EAAAA,UAAU,EAAClB,iBATiB;AAU5BmB,EAAAA,UAAU,EAACb,iBAViB;AAW5Bc,EAAAA,WAAW,EAACb,kBAXgB;AAY5Bc,EAAAA,YAAY,EAACb;AAZe,CAAD,CAA/B;AAeA,MAAMc,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADD,GAEC,EAF9B;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADF,GAEE,IAF9B;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADK,GAEL,IAF9B;AAIA,MAAMK,YAAY,GAAG;AACjBjB,EAAAA,IAAI,EACJ;AACIkB,IAAAA,SAAS,EAACR,oBADd;AAEIS,IAAAA,eAAe,EAACH;AAFpB,GAFiB;AAMjBf,EAAAA,SAAS,EAAC;AAACmB,IAAAA,QAAQ,EAACL;AAAV;AANO,CAArB;AASA,MAAMM,UAAU,GAAG,CAACrC,KAAD,CAAnB;AACA,MAAMsC,KAAK,GAAGxC,WAAW,CAACe,OAAD,EAASoB,YAAT,EACrBlC,mBAAmB,CAACH,eAAe,CAAC,GAAGyC,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import {applyMiddleware, combineReducers,createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { editCartReducer } from './Reducers/cartReducers'\r\nimport { productDetailsReducer, productListReducer } from './Reducers/productReducers'\r\nimport {userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer} from './Reducers/userReducers'\r\nimport {orderCreateReducer, orderDetailsReducer } from './Reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart: editCartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ?JSON.parse(localStorage.getItem('cartItems'))  \r\n                             :[]\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ?JSON.parse(localStorage.getItem('userInfo'))  \r\n                             :null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ?JSON.parse(localStorage.getItem('shippingAddress'))  \r\n                             :null\r\n\r\nconst initialState = {\r\n    cart:\r\n    {\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddress:shippingAddressFromStorage,\r\n    },\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}