{"ast":null,"code":"import _slicedToArray from\"C:/Users/karth/Dev/ecommerce/frontend/ecomm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../Components/FormContainer';import{savePaymentMethod}from'../Actions/cartActions';import CheckoutSteps from'../Components/CheckoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Paymentscreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState('paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];if(!shippingAddress.address){history.push(\"/shipping\");}function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push(\"/placeorder\");}var dispatch=useDispatch();return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Select Payment Method\"}),/*#__PURE__*/_jsx(Form.Check,{label:\"Paypal\",name:\"paymentMethod\",type:\"radio\",value:\"Paypal\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{label:\"Credit or Debit Card\",name:\"paymentMethod\",type:\"radio\",value:\"CCDC\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{label:\"Google Pay\",name:\"paymentMethod\",type:\"radio\",value:\"GooglePay\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{label:\"PayTM\",name:\"paymentMethod\",type:\"radio\",value:\"payTM\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:submitHandler,children:\"Submit\"})]})]});}export default Paymentscreen;","map":{"version":3,"sources":["C:/Users/karth/Dev/ecommerce/frontend/ecomm/src/Screens/Paymentscreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","savePaymentMethod","CheckoutSteps","Paymentscreen","history","cart","state","shippingAddress","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","dispatch","target","value"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA+B,OAA/B,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CAEA,OAASC,iBAAT,KAAkC,wBAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,C,wFAEA,QAASC,CAAAA,aAAT,MAAoC,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAEhC,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CACA,cAAyCZ,QAAQ,CAAC,QAAD,CAAjD,wCAAOa,aAAP,eAAqBC,gBAArB,eAEA,GAAG,CAACF,eAAe,CAACG,OAApB,CAA4B,CACxBN,OAAO,CAACO,IAAR,CAAa,WAAb,EACH,CAED,QAASC,CAAAA,aAAT,CAAuBC,CAAvB,CAAyB,CACrBA,CAAC,CAACC,cAAF,GACAC,QAAQ,CAACd,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAJ,OAAO,CAACO,IAAR,CAAa,aAAb,EACH,CAED,GAAMI,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CACA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,MAAC,IAAD,EAAM,QAAQ,CAAEc,aAAhB,wBAEI,MAAC,IAAD,CAAM,KAAN,yBACI,6CADJ,cAEI,KAAC,IAAD,CAAM,KAAN,EACI,KAAK,CAAC,QADV,CAEI,IAAI,CAAC,eAFT,CAGI,IAAI,CAAE,OAHV,CAII,KAAK,CAAG,QAJZ,CAKI,QAAQ,CAAG,kBAACC,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAvB,EALf,EAFJ,cASI,KAAC,IAAD,CAAM,KAAN,EACI,KAAK,CAAC,sBADV,CAEI,IAAI,CAAC,eAFT,CAGI,IAAI,CAAE,OAHV,CAII,KAAK,CAAG,MAJZ,CAKI,QAAQ,CAAG,kBAACJ,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAvB,EALf,EATJ,cAgBI,KAAC,IAAD,CAAM,KAAN,EACI,KAAK,CAAC,YADV,CAEI,IAAI,CAAC,eAFT,CAGI,IAAI,CAAE,OAHV,CAII,KAAK,CAAG,WAJZ,CAKI,QAAQ,CAAG,kBAACJ,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAvB,EALf,EAhBJ,cAuBI,KAAC,IAAD,CAAM,KAAN,EACI,KAAK,CAAC,OADV,CAEI,IAAI,CAAC,eAFT,CAGI,IAAI,CAAE,OAHV,CAII,KAAK,CAAE,OAJX,CAKI,QAAQ,CAAG,kBAACJ,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAvB,EALf,EAvBJ,GAFJ,cAiCI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEL,aAA/B,oBAjCJ,GAFJ,GADJ,CA0CH,CAED,cAAeT,CAAAA,aAAf","sourcesContent":["import React, { useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../Components/FormContainer'\r\n\r\nimport { savePaymentMethod } from '../Actions/cartActions'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nfunction Paymentscreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const [paymentMethod,setPaymentMethod] = useState('paypal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push(\"/shipping\")\r\n    }\r\n\r\n    function submitHandler(e){\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push(\"/placeorder\")\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <h3>Select Payment Method</h3>\r\n                    <Form.Check\r\n                        label=\"Paypal\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value = \"Paypal\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check\r\n                        label=\"Credit or Debit Card\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value = \"CCDC\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check\r\n                        label=\"Google Pay\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value = \"GooglePay\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check\r\n                        label=\"PayTM\"\r\n                        name=\"paymentMethod\"\r\n                        type= \"radio\"\r\n                        value =\"payTM\"\r\n                        onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Paymentscreen\r\n"]},"metadata":{},"sourceType":"module"}