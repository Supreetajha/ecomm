{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supre\\\\Documents\\\\ecomm\\\\src\\\\Screens\\\\Profilescreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from 'react-router-dom'; //My components\n\nimport { getUserDetails, updateUserProfile } from '../Actions/userActions';\nimport { listMyOrders } from '../Actions/orderActions';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { USER_UPDATE_PROFILE_RESET } from '../Constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profilescreen({\n  location,\n  history\n}) {\n  _s();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success || userInfo.id !== user._id) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n      } else {\n        setEmail(user.email);\n        setName(user.name);\n      }\n    }\n  }, [dispatch, userInfo, history, user, success]);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    dispatch(updateUserProfile({\n      'id': user._id,\n      'name': name,\n      'email': email,\n      'password': password\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 3,\n      children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"Name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Please enter a valid email id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), confirmPassword && password !== confirmPassword && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: \"Passwords do not match \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: confirmPassword && password !== confirmPassword,\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Profilescreen, \"KlF5kpbdFLWY4KCjZc82R51IGqA=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = Profilescreen;\nexport default Profilescreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profilescreen\");","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/Screens/Profilescreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Form","Button","Row","Col","Link","getUserDetails","updateUserProfile","listMyOrders","Loader","Message","USER_UPDATE_PROFILE_RESET","Profilescreen","location","history","userLogin","state","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","userDetails","loading","error","user","userUpdateProfile","success","push","id","_id","type","handleUpdate","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["\r\n    import {useState,useEffect} from 'react'\r\n    import {useDispatch,useSelector} from 'react-redux'\r\n    import Form from 'react-bootstrap/Form'\r\n    import Button from 'react-bootstrap/Button'\r\n    import Row from 'react-bootstrap/Row'\r\n    import Col from 'react-bootstrap/Col'\r\n    import { Link } from 'react-router-dom'\r\n    //My components\r\n    \r\n    import {getUserDetails,updateUserProfile} from '../Actions/userActions'\r\n    import { listMyOrders } from '../Actions/orderActions'\r\n    \r\n    import Loader from '../Components/Loader'\r\n    import Message from '../Components/Message'\r\n    import { USER_UPDATE_PROFILE_RESET } from '../Constants/userConstants'\r\n\r\n    function Profilescreen({location,history}) {\r\n        \r\n        const userLogin = useSelector(state=>state.userLogin)\r\n        const {userInfo} = userLogin\r\n\r\n        const [name,setName] = useState()\r\n        const [email,setEmail] = useState()\r\n        const [password,setPassword] = useState()\r\n        const [confirmPassword,setConfirmPassword] = useState()\r\n     \r\n    \r\n        const dispatch = useDispatch()\r\n        \r\n        const userDetails = useSelector(state=>state.userDetails)\r\n        const {loading,error,user} = userDetails\r\n\r\n        const userUpdateProfile = useSelector(state=>state.userUpdateProfile)\r\n        const {success} = userUpdateProfile\r\n\r\n\r\n    \r\n        useEffect(()=>{\r\n            if(!userInfo){\r\n                history.push(\"/login\")\r\n            }else {\r\n                if (!user || !user.name || success || userInfo.id !== user._id) {                \r\n                    dispatch(getUserDetails('profile'))\r\n                    dispatch(listMyOrders())\r\n                    dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                }\r\n                else{\r\n                    setEmail(user.email)\r\n                    setName(user.name)\r\n                }\r\n            }\r\n        },[dispatch,userInfo,history,user,success])\r\n    \r\n        const handleUpdate = (e) => {\r\n            e.preventDefault()\r\n            dispatch(updateUserProfile(\r\n                {'id':user._id,\r\n                'name':name,\r\n                'email':email,\r\n                'password':password}))\r\n        }\r\n        return(\r\n            <Row>\r\n                <Col sm={3}>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant =\"danger\">{error}</Message>}\r\n                    <Form onSubmit = {handleUpdate}>\r\n                        <h2>User Profile</h2>  \r\n                        <Form.Group className=\"mb-3\" controlId=\"Name\">\r\n                            <Form.Label>UserName</Form.Label>\r\n                            <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter your name\"\r\n                            value = {name}\r\n                            onChange = {(e) => setName(e.target.value)} \r\n                            required />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\"\r\n                            value = {email}\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                            required />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Please enter a valid email id \r\n                            </Form.Text>\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Password\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}  \r\n                            />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Confirm Password\"\r\n                            value = {confirmPassword}\r\n                            onChange = {(e) => setConfirmPassword(e.target.value)}  \r\n                            />\r\n                        </Form.Group>\r\n                        {confirmPassword && (password !== confirmPassword) &&\r\n                        <Message variant=\"danger\">Passwords do not match </Message>}\r\n        \r\n                        <Button variant=\"primary\" \r\n                        type=\"submit\" \r\n                        disabled = {confirmPassword && (password !== confirmPassword)}\r\n                        onClick= {handleUpdate}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <h2>My Orders</h2>\r\n                </Col>\r\n                \r\n            </Row>\r\n                \r\n\r\n            )\r\n}\r\n\r\nexport default Profilescreen"]},"metadata":{},"sourceType":"module"}