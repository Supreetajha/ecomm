{"ast":null,"code":"import axios from 'axios';\nimport { CART_CLEAR_ITEMS } from '../Constants/cartConstants';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../Constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'Application/json'\n      }\n    };\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: CART_CLEAR_ITEMS\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'Application/json'\n      }\n    };\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin\n    } = getState();\n    const {\n      userInfo\n    } = userLogin;\n    const config = {\n      headers: {\n        'Content-type': 'Application/json',\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    };\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin\n    } = getState();\n    const {\n      userInfo\n    } = userLogin;\n    console.log(userInfo);\n    const config = {\n      headers: {\n        'Content-type': 'Application/json',\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    };\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserList = () => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin\n    } = getState();\n    const {\n      userInfo\n    } = userLogin;\n    const config = {\n      headers: {\n        'Content-type': 'Application/json',\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    };\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/users/`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin\n    } = getState();\n    const {\n      userInfo\n    } = userLogin;\n    const config = {\n      headers: {\n        'Content-type': 'Application/json',\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    };\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/users/delete/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin\n    } = getState();\n    const {\n      userInfo\n    } = userLogin;\n    const config = {\n      headers: {\n        'Content-type': 'Application/json',\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    };\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.put(`/api/users/update/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/Actions/userActions.js"],"names":["axios","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","config","headers","type","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","console","log","put","getUserList","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../Constants/cartConstants'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../Constants/userConstants'\r\n\r\n\r\nexport const login = (email,password) => async(dispatch) => {\r\n    try{\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json'}\r\n        }\r\n        dispatch({type:USER_LOGIN_REQUEST})\r\n\r\n        const {data} = await axios.post('/api/users/login/',\r\n                        {'username':email,'password':password},\r\n                        config)\r\n        dispatch({type: USER_LOGIN_SUCCESS, payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }catch(error) {\r\n        dispatch({type: USER_LOGIN_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const logout = () =>(dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: CART_CLEAR_ITEMS})\r\n}\r\n\r\nexport const register = (name,email,password) => async(dispatch) => {\r\n    try{\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json'}\r\n        }\r\n        dispatch({type:USER_REGISTER_REQUEST})\r\n\r\n        const {data} = await axios.post('/api/users/register/',\r\n                        {'name':name,'email':email,'password':password},\r\n                        config)\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload:data})\r\n        dispatch({type: USER_LOGIN_SUCCESS, payload:data})\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }catch(error) {\r\n        dispatch({type: USER_REGISTER_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/users/${id}/`,\r\n                        config)\r\n\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_DETAILS_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n        }\r\n\r\n        dispatch({type:USER_UPDATE_PROFILE_REQUEST})\r\n\r\n        const {data} = await axios.put(`/api/users/profile/update/`,user,\r\n                        config)\r\n\r\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload:data})\r\n        dispatch({type: USER_LOGIN_SUCCESS,payload:data})\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n  \r\n        }catch(error) {\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const getUserList = () => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/users/`,\r\n                        config)\r\n\r\n        dispatch({type: USER_LIST_SUCCESS, payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_LIST_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_DELETE_REQUEST})\r\n\r\n        const {data} = await axios.delete(`/api/users/delete/${id}`,\r\n                        config)\r\n\r\n        dispatch({type: USER_DELETE_SUCCESS})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_DELETE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async(dispatch,getState) => {\r\n    try{\r\n        const {userLogin} = getState()\r\n        const {userInfo} = userLogin\r\n\r\n        const config = {\r\n            headers:{'Content-type' :'Application/json',\r\n                     Authorization: 'Bearer '+userInfo.token\r\n                    }\r\n\r\n        }\r\n        dispatch({type:USER_UPDATE_REQUEST})\r\n\r\n        const {data} = await axios.put(`/api/users/update/${user._id}`,\r\n                        user,\r\n                        config)\r\n\r\n        dispatch({type: USER_UPDATE_SUCCESS})\r\n\r\n        dispatch({type: USER_LIST_SUCCESS,payload:data})\r\n  \r\n    }catch(error) {\r\n        dispatch({type: USER_UPDATE_FAIL, \r\n            payload:error.response&&error.response.data.detail\r\n                    ?error.response.data.detail\r\n                    :error.message})     \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}