{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supre\\\\Documents\\\\ecomm\\\\src\\\\Screens\\\\ProductEditscreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom'; //My components\n\nimport FormContainer from '../Components/FormContainer';\nimport { listProductDetails } from '../Actions/productActions';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { USER_UPDATE_RESET } from '../Constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductEditscreen({\n  match,\n  history\n}) {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product: newProduct\n  } = productDetails;\n  useEffect(() => {\n    /*\r\n            if(!newProduct.name || newProduct._id !== Number(productId)){\r\n                console.log(\"product._id :\" + newProduct._id)\r\n                console.log(\"product.name :\" + newProduct._id)\r\n                console.log(\"productId :\"+ productId)\r\n                console.log(\"dispatch list product details\")\r\n                product = {name:\"test\",_id:Number(productId)}*/\n    dispatch(listProductDetails(productId));\n    console.log(\"!newProduct.name \" + !newProduct.name);\n    console.log(\"newProduct._id !== Number(productId)\" + (newProduct._id !== Number(productId)));\n    console.log(\"product._id :\" + newProduct._id);\n    console.log(\"product.name :\" + newProduct.name);\n    console.log(\"productId :\" + productId);\n    console.log(\"dispatch list product details\");\n    setName(newProduct.name);\n    setPrice(newProduct.price);\n    setBrand(product.brand);\n    setCategory(product.category);\n    setImage(product.image);\n    setCountInStock(product.countInStock);\n    setDescription(product.description);\n    /*\r\n    } else{\r\n        /*\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setImage(product.image)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n    }*/\n  }, [productId]);\n\n  const handleEdit = e => {\n    e.preventDefault(); //dispatch(updateUser({_id:user._id,name,email,isAdmin}))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleEdit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter product name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"countinstock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Stock Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Stock Level\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: handleEdit,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditscreen, \"6BKVsat1SYL/QCd7dt8PsWwDIyQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductEditscreen;\nexport default ProductEditscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditscreen\");","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/Screens/ProductEditscreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Form","Button","Link","FormContainer","listProductDetails","Loader","Message","USER_UPDATE_RESET","ProductEditscreen","match","history","productId","params","id","name","setName","price","setPrice","brand","setBrand","category","setCategory","image","setImage","countInStock","setCountInStock","description","setDescription","dispatch","productDetails","state","loading","error","product","newProduct","console","log","_id","Number","handleEdit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//My components\r\nimport FormContainer from '../Components/FormContainer'\r\nimport {listProductDetails} from '../Actions/productActions'\r\n\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { USER_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\nfunction ProductEditscreen({match,history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name,setName] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [brand,setBrand] = useState('')\r\n    const [category,setCategory] = useState('')\r\n    const [image,setImage] = useState('')\r\n    const [countInStock,setCountInStock] = useState(0)\r\n    const [description,setDescription] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading,error,product:newProduct} = productDetails\r\n\r\n\r\n            \r\n\r\n    useEffect(()=>{\r\n/*\r\n        if(!newProduct.name || newProduct._id !== Number(productId)){\r\n            console.log(\"product._id :\" + newProduct._id)\r\n            console.log(\"product.name :\" + newProduct._id)\r\n            console.log(\"productId :\"+ productId)\r\n            console.log(\"dispatch list product details\")\r\n            product = {name:\"test\",_id:Number(productId)}*/\r\n        dispatch(listProductDetails(productId))\r\n        console.log(\"!newProduct.name \"+ !newProduct.name )\r\n        console.log(\"newProduct._id !== Number(productId)\" + (newProduct._id !== Number(productId)))\r\n        console.log(\"product._id :\" + newProduct._id)\r\n        console.log(\"product.name :\" + newProduct.name)\r\n        console.log(\"productId :\"+ productId)\r\n        console.log(\"dispatch list product details\")\r\n        setName(newProduct.name)\r\n        setPrice(newProduct.price)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setImage(product.image)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n        /*\r\n        } else{\r\n            /*\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setImage(product.image)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n        }*/\r\n\r\n    },[productId])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        //dispatch(updateUser({_id:user._id,name,email,isAdmin}))\r\n    }\r\n    return(\r\n        <div>\r\n            <Link to=\"/admin/productlist\">\r\n             Go Back\r\n            </Link>\r\n\r\n            {loading && <Loader />} \r\n            {error && <Message variant=\"danger\">{error}</Message>}   \r\n\r\n            <FormContainer>\r\n            \r\n            <Form onSubmit = {handleEdit}>\r\n                <h2>Edit Product</h2>  \r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Product Name</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter product name\"\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"price\">\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control \r\n                    type=\"number\" \r\n                    placeholder=\"Enter price\"\r\n                    value = {price}\r\n                    onChange = {(e) => setPrice(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"image\">\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Image\"\r\n                    value = {image}\r\n                    onChange = {(e) => setImage(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"brand\">\r\n                    <Form.Label>Brand</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Brand\"\r\n                    value = {brand}\r\n                    onChange = {(e) => setBrand(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"category\">\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Category\"\r\n                    value = {category}\r\n                    onChange = {(e) => setCategory(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"countinstock\">\r\n                    <Form.Label>Stock Level</Form.Label>\r\n                    <Form.Control \r\n                    type=\"number\" \r\n                    placeholder=\"Enter Stock Level\"\r\n                    value = {countInStock}\r\n                    onChange = {(e) => setCountInStock(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Enter description\"\r\n                    value = {description}\r\n                    onChange = {(e) => setDescription(e.target.value)} \r\n                   />\r\n                </Form.Group>\r\n                \r\n                \r\n\r\n                <Button variant=\"primary\" \r\n                type=\"submit\" \r\n                onClick= {handleEdit}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </FormContainer>\r\n       \r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ProductEditscreen"]},"metadata":{},"sourceType":"module"}