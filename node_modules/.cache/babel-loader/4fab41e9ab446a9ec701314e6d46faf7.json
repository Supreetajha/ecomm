{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supre\\\\Documents\\\\ecomm\\\\src\\\\Screens\\\\UserListscreen.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserList } from '../Actions/userActions'; //My components\n\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserListscreen({\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getUserList());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, userInfo, history]);\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    size: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"EDIT/DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map(user => {\n        /*#__PURE__*/\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 29\n  }, this);\n}\n\n_s(UserListscreen, \"rpZfapXpT2ixZu9cOexGPuwCnyQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserListscreen;\nexport default UserListscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListscreen\");","map":{"version":3,"sources":["C:/Users/supre/Documents/ecomm/src/Screens/UserListscreen.js"],"names":["react","useEffect","useState","Table","useDispatch","useSelector","getUserList","Loader","Message","UserListscreen","history","dispatch","userLogin","state","userInfo","userList","loading","error","users","isAdmin","push","map","user","id","name","email","color"],"mappings":"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","sourcesContent":["import react ,{useEffect,useState} from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getUserList} from '../Actions/userActions'\r\n\r\n//My components\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\nfunction UserListscreen ({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading,error,users} = userList\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin)  {\r\n           dispatch(getUserList()) \r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch,userInfo,history])\r\n\r\n    return loading? (<Loader/>)\r\n                  : error? (<Message variant=\"danger\">{error}</Message>)\r\n                        : (\r\n                            <Table striped bordered hover responsive size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>EDIT/DELETE</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user =>{\r\n                                    <tr key={user.id}>\r\n                                        <td>{user.id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin?\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                            : <i className='fas fa-times' style={{ color: 'red' }}></i>}\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n    }\r\n        \r\n\r\n\r\nexport default UserListscreen"]},"metadata":{},"sourceType":"module"}